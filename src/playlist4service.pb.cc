// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playlist4service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "playlist4service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace spotify {
namespace playlist4 {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RequestContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCurrentRevisionArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCurrentRevisionArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetChangesInSequenceRangeArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetChangesInSequenceRangeArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetChangesInSequenceRangeMatchingPl3VersionArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetChangesInSequenceRangeMatchingPl3VersionArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetChangesInSequenceRangeReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetChangesInSequenceRangeReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObliterateListArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObliterateListArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdatePublishedArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdatePublishedArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SynchronizeArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SynchronizeArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSnapshotAtRevisionArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSnapshotAtRevisionArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Playlist4ServiceException_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Playlist4ServiceException_reflection_ = NULL;
const ::google::protobuf::Descriptor* SynchronizeReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SynchronizeReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* Playlist4ServiceCall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Playlist4ServiceCall_reflection_ = NULL;
const ::google::protobuf::Descriptor* Playlist4ServiceReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Playlist4ServiceReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateListReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateListReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlaylistModificationInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlaylistModificationInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Playlist4InboxErrorKind_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Playlist4ServiceMethodKind_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_playlist4service_2eproto() {
  protobuf_AddDesc_playlist4service_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "playlist4service.proto");
  GOOGLE_CHECK(file != NULL);
  RequestContext_descriptor_ = file->message_type(0);
  static const int RequestContext_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, administrative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, migration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, usestarredview_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, syncwithpublished_),
  };
  RequestContext_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestContext_descriptor_,
      RequestContext::default_instance_,
      RequestContext_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestContext, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestContext));
  GetCurrentRevisionArgs_descriptor_ = file->message_type(1);
  static const int GetCurrentRevisionArgs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCurrentRevisionArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCurrentRevisionArgs, context_),
  };
  GetCurrentRevisionArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCurrentRevisionArgs_descriptor_,
      GetCurrentRevisionArgs::default_instance_,
      GetCurrentRevisionArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCurrentRevisionArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCurrentRevisionArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCurrentRevisionArgs));
  GetChangesInSequenceRangeArgs_descriptor_ = file->message_type(2);
  static const int GetChangesInSequenceRangeArgs_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeArgs, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeArgs, fromsequencenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeArgs, tosequencenumber_),
  };
  GetChangesInSequenceRangeArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetChangesInSequenceRangeArgs_descriptor_,
      GetChangesInSequenceRangeArgs::default_instance_,
      GetChangesInSequenceRangeArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetChangesInSequenceRangeArgs));
  GetChangesInSequenceRangeMatchingPl3VersionArgs_descriptor_ = file->message_type(3);
  static const int GetChangesInSequenceRangeMatchingPl3VersionArgs_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, fromsequencenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, tosequencenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, pl3version_),
  };
  GetChangesInSequenceRangeMatchingPl3VersionArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetChangesInSequenceRangeMatchingPl3VersionArgs_descriptor_,
      GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance_,
      GetChangesInSequenceRangeMatchingPl3VersionArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeMatchingPl3VersionArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetChangesInSequenceRangeMatchingPl3VersionArgs));
  GetChangesInSequenceRangeReturn_descriptor_ = file->message_type(4);
  static const int GetChangesInSequenceRangeReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeReturn, result_),
  };
  GetChangesInSequenceRangeReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetChangesInSequenceRangeReturn_descriptor_,
      GetChangesInSequenceRangeReturn::default_instance_,
      GetChangesInSequenceRangeReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChangesInSequenceRangeReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetChangesInSequenceRangeReturn));
  ObliterateListArgs_descriptor_ = file->message_type(5);
  static const int ObliterateListArgs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObliterateListArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObliterateListArgs, context_),
  };
  ObliterateListArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObliterateListArgs_descriptor_,
      ObliterateListArgs::default_instance_,
      ObliterateListArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObliterateListArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObliterateListArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObliterateListArgs));
  UpdatePublishedArgs_descriptor_ = file->message_type(6);
  static const int UpdatePublishedArgs_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePublishedArgs, publisheduri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePublishedArgs, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePublishedArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePublishedArgs, ispublished_),
  };
  UpdatePublishedArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdatePublishedArgs_descriptor_,
      UpdatePublishedArgs::default_instance_,
      UpdatePublishedArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePublishedArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePublishedArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdatePublishedArgs));
  SynchronizeArgs_descriptor_ = file->message_type(7);
  static const int SynchronizeArgs_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeArgs, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeArgs, selection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeArgs, changes_),
  };
  SynchronizeArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SynchronizeArgs_descriptor_,
      SynchronizeArgs::default_instance_,
      SynchronizeArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SynchronizeArgs));
  GetSnapshotAtRevisionArgs_descriptor_ = file->message_type(8);
  static const int GetSnapshotAtRevisionArgs_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnapshotAtRevisionArgs, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnapshotAtRevisionArgs, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnapshotAtRevisionArgs, revision_),
  };
  GetSnapshotAtRevisionArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSnapshotAtRevisionArgs_descriptor_,
      GetSnapshotAtRevisionArgs::default_instance_,
      GetSnapshotAtRevisionArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnapshotAtRevisionArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnapshotAtRevisionArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSnapshotAtRevisionArgs));
  SubscribeRequest_descriptor_ = file->message_type(9);
  static const int SubscribeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, uris_),
  };
  SubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeRequest_descriptor_,
      SubscribeRequest::default_instance_,
      SubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeRequest));
  UnsubscribeRequest_descriptor_ = file->message_type(10);
  static const int UnsubscribeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, uris_),
  };
  UnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeRequest_descriptor_,
      UnsubscribeRequest::default_instance_,
      UnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeRequest));
  Playlist4ServiceException_descriptor_ = file->message_type(11);
  static const int Playlist4ServiceException_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, why_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, permanent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, serviceerrorclass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, inboxerrorkind_),
  };
  Playlist4ServiceException_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Playlist4ServiceException_descriptor_,
      Playlist4ServiceException::default_instance_,
      Playlist4ServiceException_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceException, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Playlist4ServiceException));
  SynchronizeReturn_descriptor_ = file->message_type(12);
  static const int SynchronizeReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeReturn, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeReturn, exception_),
  };
  SynchronizeReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SynchronizeReturn_descriptor_,
      SynchronizeReturn::default_instance_,
      SynchronizeReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynchronizeReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SynchronizeReturn));
  Playlist4ServiceCall_descriptor_ = file->message_type(13);
  static const int Playlist4ServiceCall_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, getcurrentrevisionargs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, getchangesinsequencerangeargs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, obliteratelistargs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, synchronizeargs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, updatepublishedargs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, getchangesinsequencerangematchingpl3versionargs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, getsnapshotatrevisionargs_),
  };
  Playlist4ServiceCall_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Playlist4ServiceCall_descriptor_,
      Playlist4ServiceCall::default_instance_,
      Playlist4ServiceCall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceCall, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Playlist4ServiceCall));
  Playlist4ServiceReturn_descriptor_ = file->message_type(14);
  static const int Playlist4ServiceReturn_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, exception_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, getcurrentrevisionreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, getchangesinsequencerangereturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, obliteratelistreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, synchronizereturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, updatepublishedreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, getchangesinsequencerangematchingpl3versionreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, getsnapshotatrevisionreturn_),
  };
  Playlist4ServiceReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Playlist4ServiceReturn_descriptor_,
      Playlist4ServiceReturn::default_instance_,
      Playlist4ServiceReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Playlist4ServiceReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Playlist4ServiceReturn));
  CreateListReply_descriptor_ = file->message_type(15);
  static const int CreateListReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateListReply, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateListReply, revision_),
  };
  CreateListReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateListReply_descriptor_,
      CreateListReply::default_instance_,
      CreateListReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateListReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateListReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateListReply));
  ModifyReply_descriptor_ = file->message_type(16);
  static const int ModifyReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyReply, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyReply, revision_),
  };
  ModifyReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModifyReply_descriptor_,
      ModifyReply::default_instance_,
      ModifyReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModifyReply));
  PlaylistModificationInfo_descriptor_ = file->message_type(17);
  static const int PlaylistModificationInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaylistModificationInfo, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaylistModificationInfo, new_revision_),
  };
  PlaylistModificationInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlaylistModificationInfo_descriptor_,
      PlaylistModificationInfo::default_instance_,
      PlaylistModificationInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaylistModificationInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaylistModificationInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlaylistModificationInfo));
  Playlist4InboxErrorKind_descriptor_ = file->enum_type(0);
  Playlist4ServiceMethodKind_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_playlist4service_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestContext_descriptor_, &RequestContext::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCurrentRevisionArgs_descriptor_, &GetCurrentRevisionArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetChangesInSequenceRangeArgs_descriptor_, &GetChangesInSequenceRangeArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetChangesInSequenceRangeMatchingPl3VersionArgs_descriptor_, &GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetChangesInSequenceRangeReturn_descriptor_, &GetChangesInSequenceRangeReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObliterateListArgs_descriptor_, &ObliterateListArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdatePublishedArgs_descriptor_, &UpdatePublishedArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SynchronizeArgs_descriptor_, &SynchronizeArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSnapshotAtRevisionArgs_descriptor_, &GetSnapshotAtRevisionArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeRequest_descriptor_, &SubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeRequest_descriptor_, &UnsubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Playlist4ServiceException_descriptor_, &Playlist4ServiceException::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SynchronizeReturn_descriptor_, &SynchronizeReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Playlist4ServiceCall_descriptor_, &Playlist4ServiceCall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Playlist4ServiceReturn_descriptor_, &Playlist4ServiceReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateListReply_descriptor_, &CreateListReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModifyReply_descriptor_, &ModifyReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlaylistModificationInfo_descriptor_, &PlaylistModificationInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_playlist4service_2eproto() {
  delete RequestContext::default_instance_;
  delete RequestContext_reflection_;
  delete GetCurrentRevisionArgs::default_instance_;
  delete GetCurrentRevisionArgs_reflection_;
  delete GetChangesInSequenceRangeArgs::default_instance_;
  delete GetChangesInSequenceRangeArgs_reflection_;
  delete GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance_;
  delete GetChangesInSequenceRangeMatchingPl3VersionArgs_reflection_;
  delete GetChangesInSequenceRangeReturn::default_instance_;
  delete GetChangesInSequenceRangeReturn_reflection_;
  delete ObliterateListArgs::default_instance_;
  delete ObliterateListArgs_reflection_;
  delete UpdatePublishedArgs::default_instance_;
  delete UpdatePublishedArgs_reflection_;
  delete SynchronizeArgs::default_instance_;
  delete SynchronizeArgs_reflection_;
  delete GetSnapshotAtRevisionArgs::default_instance_;
  delete GetSnapshotAtRevisionArgs_reflection_;
  delete SubscribeRequest::default_instance_;
  delete SubscribeRequest_reflection_;
  delete UnsubscribeRequest::default_instance_;
  delete UnsubscribeRequest_reflection_;
  delete Playlist4ServiceException::default_instance_;
  delete Playlist4ServiceException_reflection_;
  delete SynchronizeReturn::default_instance_;
  delete SynchronizeReturn_reflection_;
  delete Playlist4ServiceCall::default_instance_;
  delete Playlist4ServiceCall_reflection_;
  delete Playlist4ServiceReturn::default_instance_;
  delete Playlist4ServiceReturn_reflection_;
  delete CreateListReply::default_instance_;
  delete CreateListReply_reflection_;
  delete ModifyReply::default_instance_;
  delete ModifyReply_reflection_;
  delete PlaylistModificationInfo::default_instance_;
  delete PlaylistModificationInfo_reflection_;
}

void protobuf_AddDesc_playlist4service_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::spotify::playlist4::proto::protobuf_AddDesc_playlist4changes_2eproto();
  ::spotify::playlist4::proto::protobuf_AddDesc_playlist4content_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026playlist4service.proto\022\027spotify.playli"
    "st4.proto\032\026playlist4changes.proto\032\026playl"
    "ist4content.proto\"{\n\016RequestContext\022\026\n\016a"
    "dministrative\030\002 \001(\010\022\021\n\tmigration\030\004 \001(\010\022\013"
    "\n\003tag\030\007 \001(\t\022\026\n\016useStarredView\030\010 \001(\010\022\031\n\021s"
    "yncWithPublished\030\t \001(\010\"_\n\026GetCurrentRevi"
    "sionArgs\022\013\n\003uri\030\001 \001(\014\0228\n\007context\030\002 \001(\0132\'"
    ".spotify.playlist4.proto.RequestContext\""
    "\234\001\n\035GetChangesInSequenceRangeArgs\022\013\n\003uri"
    "\030\001 \001(\014\0228\n\007context\030\002 \001(\0132\'.spotify.playli"
    "st4.proto.RequestContext\022\032\n\022fromSequence"
    "Number\030\003 \001(\005\022\030\n\020toSequenceNumber\030\004 \001(\005\"\302"
    "\001\n/GetChangesInSequenceRangeMatchingPl3V"
    "ersionArgs\022\013\n\003uri\030\001 \001(\014\0228\n\007context\030\002 \001(\013"
    "2\'.spotify.playlist4.proto.RequestContex"
    "t\022\032\n\022fromSequenceNumber\030\003 \001(\005\022\030\n\020toSeque"
    "nceNumber\030\004 \001(\005\022\022\n\npl3Version\030\005 \001(\t\"c\n\037G"
    "etChangesInSequenceRangeReturn\022@\n\006result"
    "\030\001 \003(\01320.spotify.playlist4.proto.Revisio"
    "nTaggedChangeSet\"[\n\022ObliterateListArgs\022\013"
    "\n\003uri\030\001 \001(\014\0228\n\007context\030\002 \001(\0132\'.spotify.p"
    "laylist4.proto.RequestContext\"\207\001\n\023Update"
    "PublishedArgs\022\024\n\014publishedUri\030\001 \001(\014\0228\n\007c"
    "ontext\030\002 \001(\0132\'.spotify.playlist4.proto.R"
    "equestContext\022\013\n\003uri\030\003 \001(\014\022\023\n\013isPublishe"
    "d\030\004 \001(\010\"\321\001\n\017SynchronizeArgs\022\013\n\003uri\030\001 \001(\014"
    "\0228\n\007context\030\002 \001(\0132\'.spotify.playlist4.pr"
    "oto.RequestContext\022@\n\tselection\030\003 \001(\0132-."
    "spotify.playlist4.proto.ListContentSelec"
    "tion\0225\n\007changes\030\004 \001(\0132$.spotify.playlist"
    "4.proto.ListChanges\"t\n\031GetSnapshotAtRevi"
    "sionArgs\022\013\n\003uri\030\001 \001(\014\0228\n\007context\030\002 \001(\0132\'"
    ".spotify.playlist4.proto.RequestContext\022"
    "\020\n\010revision\030\003 \001(\014\" \n\020SubscribeRequest\022\014\n"
    "\004uris\030\001 \003(\014\"\"\n\022UnsubscribeRequest\022\014\n\004uri"
    "s\030\001 \003(\014\"\260\001\n\031Playlist4ServiceException\022\013\n"
    "\003why\030\001 \001(\t\022\016\n\006symbol\030\002 \001(\t\022\021\n\tpermanent\030"
    "\003 \001(\010\022\031\n\021serviceErrorClass\030\004 \001(\t\022H\n\016inbo"
    "xErrorKind\030\005 \001(\01620.spotify.playlist4.pro"
    "to.Playlist4InboxErrorKind\"\230\001\n\021Synchroni"
    "zeReturn\022<\n\006result\030\001 \001(\0132,.spotify.playl"
    "ist4.proto.SelectedListContent\022E\n\texcept"
    "ion\030\004 \001(\01322.spotify.playlist4.proto.Play"
    "list4ServiceException\"\273\005\n\024Playlist4Servi"
    "ceCall\022A\n\004kind\030\001 \001(\01623.spotify.playlist4"
    ".proto.Playlist4ServiceMethodKind\022O\n\026get"
    "CurrentRevisionArgs\030\002 \001(\0132/.spotify.play"
    "list4.proto.GetCurrentRevisionArgs\022]\n\035ge"
    "tChangesInSequenceRangeArgs\030\003 \001(\01326.spot"
    "ify.playlist4.proto.GetChangesInSequence"
    "RangeArgs\022G\n\022obliterateListArgs\030\004 \001(\0132+."
    "spotify.playlist4.proto.ObliterateListAr"
    "gs\022A\n\017synchronizeArgs\030\005 \001(\0132(.spotify.pl"
    "aylist4.proto.SynchronizeArgs\022I\n\023updateP"
    "ublishedArgs\030\006 \001(\0132,.spotify.playlist4.p"
    "roto.UpdatePublishedArgs\022\201\001\n/getChangesI"
    "nSequenceRangeMatchingPl3VersionArgs\030\007 \001"
    "(\0132H.spotify.playlist4.proto.GetChangesI"
    "nSequenceRangeMatchingPl3VersionArgs\022U\n\031"
    "getSnapshotAtRevisionArgs\030\010 \001(\01322.spotif"
    "y.playlist4.proto.GetSnapshotAtRevisionA"
    "rgs\"\305\004\n\026Playlist4ServiceReturn\022A\n\004kind\030\001"
    " \001(\01623.spotify.playlist4.proto.Playlist4"
    "ServiceMethodKind\022E\n\texception\030\002 \001(\01322.s"
    "potify.playlist4.proto.Playlist4ServiceE"
    "xception\022 \n\030getCurrentRevisionReturn\030\003 \001"
    "(\014\022a\n\037getChangesInSequenceRangeReturn\030\004 "
    "\001(\01328.spotify.playlist4.proto.GetChanges"
    "InSequenceRangeReturn\022\034\n\024obliterateListR"
    "eturn\030\005 \001(\010\022E\n\021synchronizeReturn\030\006 \001(\0132*"
    ".spotify.playlist4.proto.SynchronizeRetu"
    "rn\022\035\n\025updatePublishedReturn\030\007 \001(\010\022s\n1get"
    "ChangesInSequenceRangeMatchingPl3Version"
    "Return\030\010 \001(\01328.spotify.playlist4.proto.G"
    "etChangesInSequenceRangeReturn\022#\n\033getSna"
    "pshotAtRevisionReturn\030\t \001(\014\"0\n\017CreateLis"
    "tReply\022\013\n\003uri\030\001 \002(\014\022\020\n\010revision\030\002 \001(\014\",\n"
    "\013ModifyReply\022\013\n\003uri\030\001 \002(\014\022\020\n\010revision\030\002 "
    "\001(\014\"=\n\030PlaylistModificationInfo\022\013\n\003uri\030\001"
    " \001(\014\022\024\n\014new_revision\030\002 \001(\014*x\n\027Playlist4I"
    "nboxErrorKind\022\025\n\021INBOX_NOT_ALLOWED\020\002\022\026\n\022"
    "INBOX_INVALID_USER\020\003\022\025\n\021INBOX_INVALID_UR"
    "I\020\004\022\027\n\023INBOX_LIST_TOO_LONG\020\005*\260\002\n\032Playlis"
    "t4ServiceMethodKind\022\022\n\016METHOD_UNKNOWN\020\000\022"
    "\037\n\033METHOD_GET_CURRENT_REVISION\020\002\022(\n$METH"
    "OD_GET_CHANGES_IN_SEQUENCE_RANGE\020\003\022\032\n\026ME"
    "THOD_OBLITERATE_LIST\020\004\022\026\n\022METHOD_SYNCHRO"
    "NIZE\020\005\022\033\n\027METHOD_UPDATE_PUBLISHED\020\006\022=\n9M"
    "ETHOD_GET_CHANGES_IN_SEQUENCE_RANGE_MATC"
    "HING_PL3_VERSION\020\007\022#\n\037METHOD_GET_SNAPSHO"
    "T_AT_REVISION\020\010B\002H\001", 3619);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "playlist4service.proto", &protobuf_RegisterTypes);
  RequestContext::default_instance_ = new RequestContext();
  GetCurrentRevisionArgs::default_instance_ = new GetCurrentRevisionArgs();
  GetChangesInSequenceRangeArgs::default_instance_ = new GetChangesInSequenceRangeArgs();
  GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance_ = new GetChangesInSequenceRangeMatchingPl3VersionArgs();
  GetChangesInSequenceRangeReturn::default_instance_ = new GetChangesInSequenceRangeReturn();
  ObliterateListArgs::default_instance_ = new ObliterateListArgs();
  UpdatePublishedArgs::default_instance_ = new UpdatePublishedArgs();
  SynchronizeArgs::default_instance_ = new SynchronizeArgs();
  GetSnapshotAtRevisionArgs::default_instance_ = new GetSnapshotAtRevisionArgs();
  SubscribeRequest::default_instance_ = new SubscribeRequest();
  UnsubscribeRequest::default_instance_ = new UnsubscribeRequest();
  Playlist4ServiceException::default_instance_ = new Playlist4ServiceException();
  SynchronizeReturn::default_instance_ = new SynchronizeReturn();
  Playlist4ServiceCall::default_instance_ = new Playlist4ServiceCall();
  Playlist4ServiceReturn::default_instance_ = new Playlist4ServiceReturn();
  CreateListReply::default_instance_ = new CreateListReply();
  ModifyReply::default_instance_ = new ModifyReply();
  PlaylistModificationInfo::default_instance_ = new PlaylistModificationInfo();
  RequestContext::default_instance_->InitAsDefaultInstance();
  GetCurrentRevisionArgs::default_instance_->InitAsDefaultInstance();
  GetChangesInSequenceRangeArgs::default_instance_->InitAsDefaultInstance();
  GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance_->InitAsDefaultInstance();
  GetChangesInSequenceRangeReturn::default_instance_->InitAsDefaultInstance();
  ObliterateListArgs::default_instance_->InitAsDefaultInstance();
  UpdatePublishedArgs::default_instance_->InitAsDefaultInstance();
  SynchronizeArgs::default_instance_->InitAsDefaultInstance();
  GetSnapshotAtRevisionArgs::default_instance_->InitAsDefaultInstance();
  SubscribeRequest::default_instance_->InitAsDefaultInstance();
  UnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  Playlist4ServiceException::default_instance_->InitAsDefaultInstance();
  SynchronizeReturn::default_instance_->InitAsDefaultInstance();
  Playlist4ServiceCall::default_instance_->InitAsDefaultInstance();
  Playlist4ServiceReturn::default_instance_->InitAsDefaultInstance();
  CreateListReply::default_instance_->InitAsDefaultInstance();
  ModifyReply::default_instance_->InitAsDefaultInstance();
  PlaylistModificationInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_playlist4service_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_playlist4service_2eproto {
  StaticDescriptorInitializer_playlist4service_2eproto() {
    protobuf_AddDesc_playlist4service_2eproto();
  }
} static_descriptor_initializer_playlist4service_2eproto_;
const ::google::protobuf::EnumDescriptor* Playlist4InboxErrorKind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Playlist4InboxErrorKind_descriptor_;
}
bool Playlist4InboxErrorKind_IsValid(int value) {
  switch(value) {
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Playlist4ServiceMethodKind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Playlist4ServiceMethodKind_descriptor_;
}
bool Playlist4ServiceMethodKind_IsValid(int value) {
  switch(value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int RequestContext::kAdministrativeFieldNumber;
const int RequestContext::kMigrationFieldNumber;
const int RequestContext::kTagFieldNumber;
const int RequestContext::kUseStarredViewFieldNumber;
const int RequestContext::kSyncWithPublishedFieldNumber;
#endif  // !_MSC_VER

RequestContext::RequestContext()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.RequestContext)
}

void RequestContext::InitAsDefaultInstance() {
}

RequestContext::RequestContext(const RequestContext& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.RequestContext)
}

void RequestContext::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  administrative_ = false;
  migration_ = false;
  tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usestarredview_ = false;
  syncwithpublished_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestContext::~RequestContext() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.RequestContext)
  SharedDtor();
}

void RequestContext::SharedDtor() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (this != default_instance_) {
  }
}

void RequestContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestContext_descriptor_;
}

const RequestContext& RequestContext::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

RequestContext* RequestContext::default_instance_ = NULL;

RequestContext* RequestContext::New() const {
  return new RequestContext;
}

void RequestContext::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestContext*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(administrative_, syncwithpublished_);
    if (has_tag()) {
      if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tag_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.RequestContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool administrative = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &administrative_)));
          set_has_administrative();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_migration;
        break;
      }

      // optional bool migration = 4;
      case 4: {
        if (tag == 32) {
         parse_migration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &migration_)));
          set_has_migration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tag;
        break;
      }

      // optional string tag = 7;
      case 7: {
        if (tag == 58) {
         parse_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_useStarredView;
        break;
      }

      // optional bool useStarredView = 8;
      case 8: {
        if (tag == 64) {
         parse_useStarredView:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usestarredview_)));
          set_has_usestarredview();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_syncWithPublished;
        break;
      }

      // optional bool syncWithPublished = 9;
      case 9: {
        if (tag == 72) {
         parse_syncWithPublished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &syncwithpublished_)));
          set_has_syncwithpublished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.RequestContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.RequestContext)
  return false;
#undef DO_
}

void RequestContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.RequestContext)
  // optional bool administrative = 2;
  if (has_administrative()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->administrative(), output);
  }

  // optional bool migration = 4;
  if (has_migration()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->migration(), output);
  }

  // optional string tag = 7;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->tag(), output);
  }

  // optional bool useStarredView = 8;
  if (has_usestarredview()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->usestarredview(), output);
  }

  // optional bool syncWithPublished = 9;
  if (has_syncwithpublished()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->syncwithpublished(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.RequestContext)
}

::google::protobuf::uint8* RequestContext::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.RequestContext)
  // optional bool administrative = 2;
  if (has_administrative()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->administrative(), target);
  }

  // optional bool migration = 4;
  if (has_migration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->migration(), target);
  }

  // optional string tag = 7;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->tag(), target);
  }

  // optional bool useStarredView = 8;
  if (has_usestarredview()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->usestarredview(), target);
  }

  // optional bool syncWithPublished = 9;
  if (has_syncwithpublished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->syncwithpublished(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.RequestContext)
  return target;
}

int RequestContext::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool administrative = 2;
    if (has_administrative()) {
      total_size += 1 + 1;
    }

    // optional bool migration = 4;
    if (has_migration()) {
      total_size += 1 + 1;
    }

    // optional string tag = 7;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
    }

    // optional bool useStarredView = 8;
    if (has_usestarredview()) {
      total_size += 1 + 1;
    }

    // optional bool syncWithPublished = 9;
    if (has_syncwithpublished()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestContext::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestContext* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestContext*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestContext::MergeFrom(const RequestContext& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_administrative()) {
      set_administrative(from.administrative());
    }
    if (from.has_migration()) {
      set_migration(from.migration());
    }
    if (from.has_tag()) {
      set_tag(from.tag());
    }
    if (from.has_usestarredview()) {
      set_usestarredview(from.usestarredview());
    }
    if (from.has_syncwithpublished()) {
      set_syncwithpublished(from.syncwithpublished());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestContext::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestContext::CopyFrom(const RequestContext& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestContext::IsInitialized() const {

  return true;
}

void RequestContext::Swap(RequestContext* other) {
  if (other != this) {
    std::swap(administrative_, other->administrative_);
    std::swap(migration_, other->migration_);
    std::swap(tag_, other->tag_);
    std::swap(usestarredview_, other->usestarredview_);
    std::swap(syncwithpublished_, other->syncwithpublished_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestContext_descriptor_;
  metadata.reflection = RequestContext_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetCurrentRevisionArgs::kUriFieldNumber;
const int GetCurrentRevisionArgs::kContextFieldNumber;
#endif  // !_MSC_VER

GetCurrentRevisionArgs::GetCurrentRevisionArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.GetCurrentRevisionArgs)
}

void GetCurrentRevisionArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
}

GetCurrentRevisionArgs::GetCurrentRevisionArgs(const GetCurrentRevisionArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.GetCurrentRevisionArgs)
}

void GetCurrentRevisionArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCurrentRevisionArgs::~GetCurrentRevisionArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.GetCurrentRevisionArgs)
  SharedDtor();
}

void GetCurrentRevisionArgs::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (this != default_instance_) {
    delete context_;
  }
}

void GetCurrentRevisionArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCurrentRevisionArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCurrentRevisionArgs_descriptor_;
}

const GetCurrentRevisionArgs& GetCurrentRevisionArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

GetCurrentRevisionArgs* GetCurrentRevisionArgs::default_instance_ = NULL;

GetCurrentRevisionArgs* GetCurrentRevisionArgs::New() const {
  return new GetCurrentRevisionArgs;
}

void GetCurrentRevisionArgs::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetCurrentRevisionArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.GetCurrentRevisionArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.GetCurrentRevisionArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.GetCurrentRevisionArgs)
  return false;
#undef DO_
}

void GetCurrentRevisionArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.GetCurrentRevisionArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.GetCurrentRevisionArgs)
}

::google::protobuf::uint8* GetCurrentRevisionArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.GetCurrentRevisionArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.GetCurrentRevisionArgs)
  return target;
}

int GetCurrentRevisionArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCurrentRevisionArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetCurrentRevisionArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetCurrentRevisionArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCurrentRevisionArgs::MergeFrom(const GetCurrentRevisionArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetCurrentRevisionArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCurrentRevisionArgs::CopyFrom(const GetCurrentRevisionArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrentRevisionArgs::IsInitialized() const {

  return true;
}

void GetCurrentRevisionArgs::Swap(GetCurrentRevisionArgs* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(context_, other->context_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetCurrentRevisionArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCurrentRevisionArgs_descriptor_;
  metadata.reflection = GetCurrentRevisionArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetChangesInSequenceRangeArgs::kUriFieldNumber;
const int GetChangesInSequenceRangeArgs::kContextFieldNumber;
const int GetChangesInSequenceRangeArgs::kFromSequenceNumberFieldNumber;
const int GetChangesInSequenceRangeArgs::kToSequenceNumberFieldNumber;
#endif  // !_MSC_VER

GetChangesInSequenceRangeArgs::GetChangesInSequenceRangeArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
}

void GetChangesInSequenceRangeArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
}

GetChangesInSequenceRangeArgs::GetChangesInSequenceRangeArgs(const GetChangesInSequenceRangeArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
}

void GetChangesInSequenceRangeArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  fromsequencenumber_ = 0;
  tosequencenumber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetChangesInSequenceRangeArgs::~GetChangesInSequenceRangeArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  SharedDtor();
}

void GetChangesInSequenceRangeArgs::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (this != default_instance_) {
    delete context_;
  }
}

void GetChangesInSequenceRangeArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChangesInSequenceRangeArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetChangesInSequenceRangeArgs_descriptor_;
}

const GetChangesInSequenceRangeArgs& GetChangesInSequenceRangeArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

GetChangesInSequenceRangeArgs* GetChangesInSequenceRangeArgs::default_instance_ = NULL;

GetChangesInSequenceRangeArgs* GetChangesInSequenceRangeArgs::New() const {
  return new GetChangesInSequenceRangeArgs;
}

void GetChangesInSequenceRangeArgs::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetChangesInSequenceRangeArgs*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(fromsequencenumber_, tosequencenumber_);
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetChangesInSequenceRangeArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fromSequenceNumber;
        break;
      }

      // optional int32 fromSequenceNumber = 3;
      case 3: {
        if (tag == 24) {
         parse_fromSequenceNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromsequencenumber_)));
          set_has_fromsequencenumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_toSequenceNumber;
        break;
      }

      // optional int32 toSequenceNumber = 4;
      case 4: {
        if (tag == 32) {
         parse_toSequenceNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tosequencenumber_)));
          set_has_tosequencenumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  return false;
#undef DO_
}

void GetChangesInSequenceRangeArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  // optional int32 fromSequenceNumber = 3;
  if (has_fromsequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fromsequencenumber(), output);
  }

  // optional int32 toSequenceNumber = 4;
  if (has_tosequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tosequencenumber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
}

::google::protobuf::uint8* GetChangesInSequenceRangeArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  // optional int32 fromSequenceNumber = 3;
  if (has_fromsequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fromsequencenumber(), target);
  }

  // optional int32 toSequenceNumber = 4;
  if (has_tosequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tosequencenumber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.GetChangesInSequenceRangeArgs)
  return target;
}

int GetChangesInSequenceRangeArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

    // optional int32 fromSequenceNumber = 3;
    if (has_fromsequencenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fromsequencenumber());
    }

    // optional int32 toSequenceNumber = 4;
    if (has_tosequencenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tosequencenumber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChangesInSequenceRangeArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetChangesInSequenceRangeArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetChangesInSequenceRangeArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetChangesInSequenceRangeArgs::MergeFrom(const GetChangesInSequenceRangeArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
    if (from.has_fromsequencenumber()) {
      set_fromsequencenumber(from.fromsequencenumber());
    }
    if (from.has_tosequencenumber()) {
      set_tosequencenumber(from.tosequencenumber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetChangesInSequenceRangeArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChangesInSequenceRangeArgs::CopyFrom(const GetChangesInSequenceRangeArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChangesInSequenceRangeArgs::IsInitialized() const {

  return true;
}

void GetChangesInSequenceRangeArgs::Swap(GetChangesInSequenceRangeArgs* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(context_, other->context_);
    std::swap(fromsequencenumber_, other->fromsequencenumber_);
    std::swap(tosequencenumber_, other->tosequencenumber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetChangesInSequenceRangeArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetChangesInSequenceRangeArgs_descriptor_;
  metadata.reflection = GetChangesInSequenceRangeArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetChangesInSequenceRangeMatchingPl3VersionArgs::kUriFieldNumber;
const int GetChangesInSequenceRangeMatchingPl3VersionArgs::kContextFieldNumber;
const int GetChangesInSequenceRangeMatchingPl3VersionArgs::kFromSequenceNumberFieldNumber;
const int GetChangesInSequenceRangeMatchingPl3VersionArgs::kToSequenceNumberFieldNumber;
const int GetChangesInSequenceRangeMatchingPl3VersionArgs::kPl3VersionFieldNumber;
#endif  // !_MSC_VER

GetChangesInSequenceRangeMatchingPl3VersionArgs::GetChangesInSequenceRangeMatchingPl3VersionArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
}

GetChangesInSequenceRangeMatchingPl3VersionArgs::GetChangesInSequenceRangeMatchingPl3VersionArgs(const GetChangesInSequenceRangeMatchingPl3VersionArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  fromsequencenumber_ = 0;
  tosequencenumber_ = 0;
  pl3version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetChangesInSequenceRangeMatchingPl3VersionArgs::~GetChangesInSequenceRangeMatchingPl3VersionArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  SharedDtor();
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (pl3version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pl3version_;
  }
  if (this != default_instance_) {
    delete context_;
  }
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChangesInSequenceRangeMatchingPl3VersionArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetChangesInSequenceRangeMatchingPl3VersionArgs_descriptor_;
}

const GetChangesInSequenceRangeMatchingPl3VersionArgs& GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

GetChangesInSequenceRangeMatchingPl3VersionArgs* GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance_ = NULL;

GetChangesInSequenceRangeMatchingPl3VersionArgs* GetChangesInSequenceRangeMatchingPl3VersionArgs::New() const {
  return new GetChangesInSequenceRangeMatchingPl3VersionArgs;
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetChangesInSequenceRangeMatchingPl3VersionArgs*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(fromsequencenumber_, tosequencenumber_);
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
    if (has_pl3version()) {
      if (pl3version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pl3version_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetChangesInSequenceRangeMatchingPl3VersionArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fromSequenceNumber;
        break;
      }

      // optional int32 fromSequenceNumber = 3;
      case 3: {
        if (tag == 24) {
         parse_fromSequenceNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromsequencenumber_)));
          set_has_fromsequencenumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_toSequenceNumber;
        break;
      }

      // optional int32 toSequenceNumber = 4;
      case 4: {
        if (tag == 32) {
         parse_toSequenceNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tosequencenumber_)));
          set_has_tosequencenumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pl3Version;
        break;
      }

      // optional string pl3Version = 5;
      case 5: {
        if (tag == 42) {
         parse_pl3Version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pl3version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pl3version().data(), this->pl3version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pl3version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  return false;
#undef DO_
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  // optional int32 fromSequenceNumber = 3;
  if (has_fromsequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fromsequencenumber(), output);
  }

  // optional int32 toSequenceNumber = 4;
  if (has_tosequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tosequencenumber(), output);
  }

  // optional string pl3Version = 5;
  if (has_pl3version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pl3version().data(), this->pl3version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pl3version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pl3version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
}

::google::protobuf::uint8* GetChangesInSequenceRangeMatchingPl3VersionArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  // optional int32 fromSequenceNumber = 3;
  if (has_fromsequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fromsequencenumber(), target);
  }

  // optional int32 toSequenceNumber = 4;
  if (has_tosequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tosequencenumber(), target);
  }

  // optional string pl3Version = 5;
  if (has_pl3version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pl3version().data(), this->pl3version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pl3version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pl3version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs)
  return target;
}

int GetChangesInSequenceRangeMatchingPl3VersionArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

    // optional int32 fromSequenceNumber = 3;
    if (has_fromsequencenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fromsequencenumber());
    }

    // optional int32 toSequenceNumber = 4;
    if (has_tosequencenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tosequencenumber());
    }

    // optional string pl3Version = 5;
    if (has_pl3version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pl3version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetChangesInSequenceRangeMatchingPl3VersionArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetChangesInSequenceRangeMatchingPl3VersionArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::MergeFrom(const GetChangesInSequenceRangeMatchingPl3VersionArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
    if (from.has_fromsequencenumber()) {
      set_fromsequencenumber(from.fromsequencenumber());
    }
    if (from.has_tosequencenumber()) {
      set_tosequencenumber(from.tosequencenumber());
    }
    if (from.has_pl3version()) {
      set_pl3version(from.pl3version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::CopyFrom(const GetChangesInSequenceRangeMatchingPl3VersionArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChangesInSequenceRangeMatchingPl3VersionArgs::IsInitialized() const {

  return true;
}

void GetChangesInSequenceRangeMatchingPl3VersionArgs::Swap(GetChangesInSequenceRangeMatchingPl3VersionArgs* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(context_, other->context_);
    std::swap(fromsequencenumber_, other->fromsequencenumber_);
    std::swap(tosequencenumber_, other->tosequencenumber_);
    std::swap(pl3version_, other->pl3version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetChangesInSequenceRangeMatchingPl3VersionArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetChangesInSequenceRangeMatchingPl3VersionArgs_descriptor_;
  metadata.reflection = GetChangesInSequenceRangeMatchingPl3VersionArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetChangesInSequenceRangeReturn::kResultFieldNumber;
#endif  // !_MSC_VER

GetChangesInSequenceRangeReturn::GetChangesInSequenceRangeReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
}

void GetChangesInSequenceRangeReturn::InitAsDefaultInstance() {
}

GetChangesInSequenceRangeReturn::GetChangesInSequenceRangeReturn(const GetChangesInSequenceRangeReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
}

void GetChangesInSequenceRangeReturn::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetChangesInSequenceRangeReturn::~GetChangesInSequenceRangeReturn() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  SharedDtor();
}

void GetChangesInSequenceRangeReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetChangesInSequenceRangeReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChangesInSequenceRangeReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetChangesInSequenceRangeReturn_descriptor_;
}

const GetChangesInSequenceRangeReturn& GetChangesInSequenceRangeReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

GetChangesInSequenceRangeReturn* GetChangesInSequenceRangeReturn::default_instance_ = NULL;

GetChangesInSequenceRangeReturn* GetChangesInSequenceRangeReturn::New() const {
  return new GetChangesInSequenceRangeReturn;
}

void GetChangesInSequenceRangeReturn::Clear() {
  result_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetChangesInSequenceRangeReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .spotify.playlist4.proto.RevisionTaggedChangeSet result = 1;
      case 1: {
        if (tag == 10) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_result;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  return false;
#undef DO_
}

void GetChangesInSequenceRangeReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  // repeated .spotify.playlist4.proto.RevisionTaggedChangeSet result = 1;
  for (int i = 0; i < this->result_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
}

::google::protobuf::uint8* GetChangesInSequenceRangeReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  // repeated .spotify.playlist4.proto.RevisionTaggedChangeSet result = 1;
  for (int i = 0; i < this->result_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.GetChangesInSequenceRangeReturn)
  return target;
}

int GetChangesInSequenceRangeReturn::ByteSize() const {
  int total_size = 0;

  // repeated .spotify.playlist4.proto.RevisionTaggedChangeSet result = 1;
  total_size += 1 * this->result_size();
  for (int i = 0; i < this->result_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->result(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChangesInSequenceRangeReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetChangesInSequenceRangeReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetChangesInSequenceRangeReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetChangesInSequenceRangeReturn::MergeFrom(const GetChangesInSequenceRangeReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  result_.MergeFrom(from.result_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetChangesInSequenceRangeReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChangesInSequenceRangeReturn::CopyFrom(const GetChangesInSequenceRangeReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChangesInSequenceRangeReturn::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->result())) return false;
  return true;
}

void GetChangesInSequenceRangeReturn::Swap(GetChangesInSequenceRangeReturn* other) {
  if (other != this) {
    result_.Swap(&other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetChangesInSequenceRangeReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetChangesInSequenceRangeReturn_descriptor_;
  metadata.reflection = GetChangesInSequenceRangeReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObliterateListArgs::kUriFieldNumber;
const int ObliterateListArgs::kContextFieldNumber;
#endif  // !_MSC_VER

ObliterateListArgs::ObliterateListArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.ObliterateListArgs)
}

void ObliterateListArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
}

ObliterateListArgs::ObliterateListArgs(const ObliterateListArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.ObliterateListArgs)
}

void ObliterateListArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObliterateListArgs::~ObliterateListArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.ObliterateListArgs)
  SharedDtor();
}

void ObliterateListArgs::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (this != default_instance_) {
    delete context_;
  }
}

void ObliterateListArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObliterateListArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObliterateListArgs_descriptor_;
}

const ObliterateListArgs& ObliterateListArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

ObliterateListArgs* ObliterateListArgs::default_instance_ = NULL;

ObliterateListArgs* ObliterateListArgs::New() const {
  return new ObliterateListArgs;
}

void ObliterateListArgs::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObliterateListArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.ObliterateListArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.ObliterateListArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.ObliterateListArgs)
  return false;
#undef DO_
}

void ObliterateListArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.ObliterateListArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.ObliterateListArgs)
}

::google::protobuf::uint8* ObliterateListArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.ObliterateListArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.ObliterateListArgs)
  return target;
}

int ObliterateListArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObliterateListArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObliterateListArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObliterateListArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObliterateListArgs::MergeFrom(const ObliterateListArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObliterateListArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObliterateListArgs::CopyFrom(const ObliterateListArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObliterateListArgs::IsInitialized() const {

  return true;
}

void ObliterateListArgs::Swap(ObliterateListArgs* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(context_, other->context_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObliterateListArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObliterateListArgs_descriptor_;
  metadata.reflection = ObliterateListArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdatePublishedArgs::kPublishedUriFieldNumber;
const int UpdatePublishedArgs::kContextFieldNumber;
const int UpdatePublishedArgs::kUriFieldNumber;
const int UpdatePublishedArgs::kIsPublishedFieldNumber;
#endif  // !_MSC_VER

UpdatePublishedArgs::UpdatePublishedArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.UpdatePublishedArgs)
}

void UpdatePublishedArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
}

UpdatePublishedArgs::UpdatePublishedArgs(const UpdatePublishedArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.UpdatePublishedArgs)
}

void UpdatePublishedArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  publisheduri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ispublished_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdatePublishedArgs::~UpdatePublishedArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.UpdatePublishedArgs)
  SharedDtor();
}

void UpdatePublishedArgs::SharedDtor() {
  if (publisheduri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete publisheduri_;
  }
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (this != default_instance_) {
    delete context_;
  }
}

void UpdatePublishedArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePublishedArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdatePublishedArgs_descriptor_;
}

const UpdatePublishedArgs& UpdatePublishedArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

UpdatePublishedArgs* UpdatePublishedArgs::default_instance_ = NULL;

UpdatePublishedArgs* UpdatePublishedArgs::New() const {
  return new UpdatePublishedArgs;
}

void UpdatePublishedArgs::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_publisheduri()) {
      if (publisheduri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        publisheduri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    ispublished_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdatePublishedArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.UpdatePublishedArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes publishedUri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publisheduri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uri;
        break;
      }

      // optional bytes uri = 3;
      case 3: {
        if (tag == 26) {
         parse_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_isPublished;
        break;
      }

      // optional bool isPublished = 4;
      case 4: {
        if (tag == 32) {
         parse_isPublished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispublished_)));
          set_has_ispublished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.UpdatePublishedArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.UpdatePublishedArgs)
  return false;
#undef DO_
}

void UpdatePublishedArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.UpdatePublishedArgs)
  // optional bytes publishedUri = 1;
  if (has_publisheduri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->publisheduri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  // optional bytes uri = 3;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->uri(), output);
  }

  // optional bool isPublished = 4;
  if (has_ispublished()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ispublished(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.UpdatePublishedArgs)
}

::google::protobuf::uint8* UpdatePublishedArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.UpdatePublishedArgs)
  // optional bytes publishedUri = 1;
  if (has_publisheduri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->publisheduri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  // optional bytes uri = 3;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->uri(), target);
  }

  // optional bool isPublished = 4;
  if (has_ispublished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ispublished(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.UpdatePublishedArgs)
  return target;
}

int UpdatePublishedArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes publishedUri = 1;
    if (has_publisheduri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->publisheduri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

    // optional bytes uri = 3;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional bool isPublished = 4;
    if (has_ispublished()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePublishedArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdatePublishedArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdatePublishedArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdatePublishedArgs::MergeFrom(const UpdatePublishedArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_publisheduri()) {
      set_publisheduri(from.publisheduri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_ispublished()) {
      set_ispublished(from.ispublished());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdatePublishedArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePublishedArgs::CopyFrom(const UpdatePublishedArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePublishedArgs::IsInitialized() const {

  return true;
}

void UpdatePublishedArgs::Swap(UpdatePublishedArgs* other) {
  if (other != this) {
    std::swap(publisheduri_, other->publisheduri_);
    std::swap(context_, other->context_);
    std::swap(uri_, other->uri_);
    std::swap(ispublished_, other->ispublished_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdatePublishedArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdatePublishedArgs_descriptor_;
  metadata.reflection = UpdatePublishedArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SynchronizeArgs::kUriFieldNumber;
const int SynchronizeArgs::kContextFieldNumber;
const int SynchronizeArgs::kSelectionFieldNumber;
const int SynchronizeArgs::kChangesFieldNumber;
#endif  // !_MSC_VER

SynchronizeArgs::SynchronizeArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.SynchronizeArgs)
}

void SynchronizeArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
  selection_ = const_cast< ::spotify::playlist4::proto::ListContentSelection*>(&::spotify::playlist4::proto::ListContentSelection::default_instance());
  changes_ = const_cast< ::spotify::playlist4::proto::ListChanges*>(&::spotify::playlist4::proto::ListChanges::default_instance());
}

SynchronizeArgs::SynchronizeArgs(const SynchronizeArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.SynchronizeArgs)
}

void SynchronizeArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  selection_ = NULL;
  changes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SynchronizeArgs::~SynchronizeArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.SynchronizeArgs)
  SharedDtor();
}

void SynchronizeArgs::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (this != default_instance_) {
    delete context_;
    delete selection_;
    delete changes_;
  }
}

void SynchronizeArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SynchronizeArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SynchronizeArgs_descriptor_;
}

const SynchronizeArgs& SynchronizeArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

SynchronizeArgs* SynchronizeArgs::default_instance_ = NULL;

SynchronizeArgs* SynchronizeArgs::New() const {
  return new SynchronizeArgs;
}

void SynchronizeArgs::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
    if (has_selection()) {
      if (selection_ != NULL) selection_->::spotify::playlist4::proto::ListContentSelection::Clear();
    }
    if (has_changes()) {
      if (changes_ != NULL) changes_->::spotify::playlist4::proto::ListChanges::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SynchronizeArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.SynchronizeArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_selection;
        break;
      }

      // optional .spotify.playlist4.proto.ListContentSelection selection = 3;
      case 3: {
        if (tag == 26) {
         parse_selection:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selection()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_changes;
        break;
      }

      // optional .spotify.playlist4.proto.ListChanges changes = 4;
      case 4: {
        if (tag == 34) {
         parse_changes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_changes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.SynchronizeArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.SynchronizeArgs)
  return false;
#undef DO_
}

void SynchronizeArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.SynchronizeArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  // optional .spotify.playlist4.proto.ListContentSelection selection = 3;
  if (has_selection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->selection(), output);
  }

  // optional .spotify.playlist4.proto.ListChanges changes = 4;
  if (has_changes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->changes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.SynchronizeArgs)
}

::google::protobuf::uint8* SynchronizeArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.SynchronizeArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  // optional .spotify.playlist4.proto.ListContentSelection selection = 3;
  if (has_selection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->selection(), target);
  }

  // optional .spotify.playlist4.proto.ListChanges changes = 4;
  if (has_changes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->changes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.SynchronizeArgs)
  return target;
}

int SynchronizeArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

    // optional .spotify.playlist4.proto.ListContentSelection selection = 3;
    if (has_selection()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->selection());
    }

    // optional .spotify.playlist4.proto.ListChanges changes = 4;
    if (has_changes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SynchronizeArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SynchronizeArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SynchronizeArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SynchronizeArgs::MergeFrom(const SynchronizeArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
    if (from.has_selection()) {
      mutable_selection()->::spotify::playlist4::proto::ListContentSelection::MergeFrom(from.selection());
    }
    if (from.has_changes()) {
      mutable_changes()->::spotify::playlist4::proto::ListChanges::MergeFrom(from.changes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SynchronizeArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeArgs::CopyFrom(const SynchronizeArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeArgs::IsInitialized() const {

  if (has_selection()) {
    if (!this->selection().IsInitialized()) return false;
  }
  if (has_changes()) {
    if (!this->changes().IsInitialized()) return false;
  }
  return true;
}

void SynchronizeArgs::Swap(SynchronizeArgs* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(context_, other->context_);
    std::swap(selection_, other->selection_);
    std::swap(changes_, other->changes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SynchronizeArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SynchronizeArgs_descriptor_;
  metadata.reflection = SynchronizeArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSnapshotAtRevisionArgs::kUriFieldNumber;
const int GetSnapshotAtRevisionArgs::kContextFieldNumber;
const int GetSnapshotAtRevisionArgs::kRevisionFieldNumber;
#endif  // !_MSC_VER

GetSnapshotAtRevisionArgs::GetSnapshotAtRevisionArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
}

void GetSnapshotAtRevisionArgs::InitAsDefaultInstance() {
  context_ = const_cast< ::spotify::playlist4::proto::RequestContext*>(&::spotify::playlist4::proto::RequestContext::default_instance());
}

GetSnapshotAtRevisionArgs::GetSnapshotAtRevisionArgs(const GetSnapshotAtRevisionArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
}

void GetSnapshotAtRevisionArgs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
  revision_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSnapshotAtRevisionArgs::~GetSnapshotAtRevisionArgs() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  SharedDtor();
}

void GetSnapshotAtRevisionArgs::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revision_;
  }
  if (this != default_instance_) {
    delete context_;
  }
}

void GetSnapshotAtRevisionArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSnapshotAtRevisionArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSnapshotAtRevisionArgs_descriptor_;
}

const GetSnapshotAtRevisionArgs& GetSnapshotAtRevisionArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

GetSnapshotAtRevisionArgs* GetSnapshotAtRevisionArgs::default_instance_ = NULL;

GetSnapshotAtRevisionArgs* GetSnapshotAtRevisionArgs::New() const {
  return new GetSnapshotAtRevisionArgs;
}

void GetSnapshotAtRevisionArgs::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_context()) {
      if (context_ != NULL) context_->::spotify::playlist4::proto::RequestContext::Clear();
    }
    if (has_revision()) {
      if (revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revision_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSnapshotAtRevisionArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional .spotify.playlist4.proto.RequestContext context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_revision;
        break;
      }

      // optional bytes revision = 3;
      case 3: {
        if (tag == 26) {
         parse_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_revision()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  return false;
#undef DO_
}

void GetSnapshotAtRevisionArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->context(), output);
  }

  // optional bytes revision = 3;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->revision(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
}

::google::protobuf::uint8* GetSnapshotAtRevisionArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional .spotify.playlist4.proto.RequestContext context = 2;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->context(), target);
  }

  // optional bytes revision = 3;
  if (has_revision()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->revision(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.GetSnapshotAtRevisionArgs)
  return target;
}

int GetSnapshotAtRevisionArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional .spotify.playlist4.proto.RequestContext context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->context());
    }

    // optional bytes revision = 3;
    if (has_revision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->revision());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSnapshotAtRevisionArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSnapshotAtRevisionArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSnapshotAtRevisionArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSnapshotAtRevisionArgs::MergeFrom(const GetSnapshotAtRevisionArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_context()) {
      mutable_context()->::spotify::playlist4::proto::RequestContext::MergeFrom(from.context());
    }
    if (from.has_revision()) {
      set_revision(from.revision());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSnapshotAtRevisionArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSnapshotAtRevisionArgs::CopyFrom(const GetSnapshotAtRevisionArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSnapshotAtRevisionArgs::IsInitialized() const {

  return true;
}

void GetSnapshotAtRevisionArgs::Swap(GetSnapshotAtRevisionArgs* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(context_, other->context_);
    std::swap(revision_, other->revision_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetSnapshotAtRevisionArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSnapshotAtRevisionArgs_descriptor_;
  metadata.reflection = GetSnapshotAtRevisionArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SubscribeRequest::kUrisFieldNumber;
#endif  // !_MSC_VER

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.SubscribeRequest)
}

void SubscribeRequest::InitAsDefaultInstance() {
}

SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeRequest_descriptor_;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

SubscribeRequest* SubscribeRequest::default_instance_ = NULL;

SubscribeRequest* SubscribeRequest::New() const {
  return new SubscribeRequest;
}

void SubscribeRequest::Clear() {
  uris_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.SubscribeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes uris = 1;
      case 1: {
        if (tag == 10) {
         parse_uris:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_uris()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_uris;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.SubscribeRequest)
  // repeated bytes uris = 1;
  for (int i = 0; i < this->uris_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->uris(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.SubscribeRequest)
  // repeated bytes uris = 1;
  for (int i = 0; i < this->uris_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->uris(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.SubscribeRequest)
  return target;
}

int SubscribeRequest::ByteSize() const {
  int total_size = 0;

  // repeated bytes uris = 1;
  total_size += 1 * this->uris_size();
  for (int i = 0; i < this->uris_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->uris(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubscribeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubscribeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  uris_.MergeFrom(from.uris_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {

  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other != this) {
    uris_.Swap(&other->uris_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeRequest_descriptor_;
  metadata.reflection = SubscribeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeRequest::kUrisFieldNumber;
#endif  // !_MSC_VER

UnsubscribeRequest::UnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.UnsubscribeRequest)
}

void UnsubscribeRequest::InitAsDefaultInstance() {
}

UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.UnsubscribeRequest)
}

void UnsubscribeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.UnsubscribeRequest)
  SharedDtor();
}

void UnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeRequest_descriptor_;
}

const UnsubscribeRequest& UnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

UnsubscribeRequest* UnsubscribeRequest::default_instance_ = NULL;

UnsubscribeRequest* UnsubscribeRequest::New() const {
  return new UnsubscribeRequest;
}

void UnsubscribeRequest::Clear() {
  uris_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnsubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.UnsubscribeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes uris = 1;
      case 1: {
        if (tag == 10) {
         parse_uris:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_uris()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_uris;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.UnsubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.UnsubscribeRequest)
  return false;
#undef DO_
}

void UnsubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.UnsubscribeRequest)
  // repeated bytes uris = 1;
  for (int i = 0; i < this->uris_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->uris(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.UnsubscribeRequest)
}

::google::protobuf::uint8* UnsubscribeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.UnsubscribeRequest)
  // repeated bytes uris = 1;
  for (int i = 0; i < this->uris_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->uris(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.UnsubscribeRequest)
  return target;
}

int UnsubscribeRequest::ByteSize() const {
  int total_size = 0;

  // repeated bytes uris = 1;
  total_size += 1 * this->uris_size();
  for (int i = 0; i < this->uris_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->uris(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnsubscribeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnsubscribeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnsubscribeRequest::MergeFrom(const UnsubscribeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  uris_.MergeFrom(from.uris_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnsubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsubscribeRequest::CopyFrom(const UnsubscribeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsubscribeRequest::IsInitialized() const {

  return true;
}

void UnsubscribeRequest::Swap(UnsubscribeRequest* other) {
  if (other != this) {
    uris_.Swap(&other->uris_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeRequest_descriptor_;
  metadata.reflection = UnsubscribeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Playlist4ServiceException::kWhyFieldNumber;
const int Playlist4ServiceException::kSymbolFieldNumber;
const int Playlist4ServiceException::kPermanentFieldNumber;
const int Playlist4ServiceException::kServiceErrorClassFieldNumber;
const int Playlist4ServiceException::kInboxErrorKindFieldNumber;
#endif  // !_MSC_VER

Playlist4ServiceException::Playlist4ServiceException()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.Playlist4ServiceException)
}

void Playlist4ServiceException::InitAsDefaultInstance() {
}

Playlist4ServiceException::Playlist4ServiceException(const Playlist4ServiceException& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.Playlist4ServiceException)
}

void Playlist4ServiceException::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  why_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permanent_ = false;
  serviceerrorclass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inboxerrorkind_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Playlist4ServiceException::~Playlist4ServiceException() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.Playlist4ServiceException)
  SharedDtor();
}

void Playlist4ServiceException::SharedDtor() {
  if (why_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete why_;
  }
  if (symbol_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete symbol_;
  }
  if (serviceerrorclass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serviceerrorclass_;
  }
  if (this != default_instance_) {
  }
}

void Playlist4ServiceException::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Playlist4ServiceException::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Playlist4ServiceException_descriptor_;
}

const Playlist4ServiceException& Playlist4ServiceException::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

Playlist4ServiceException* Playlist4ServiceException::default_instance_ = NULL;

Playlist4ServiceException* Playlist4ServiceException::New() const {
  return new Playlist4ServiceException;
}

void Playlist4ServiceException::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_why()) {
      if (why_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        why_->clear();
      }
    }
    if (has_symbol()) {
      if (symbol_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        symbol_->clear();
      }
    }
    permanent_ = false;
    if (has_serviceerrorclass()) {
      if (serviceerrorclass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serviceerrorclass_->clear();
      }
    }
    inboxerrorkind_ = 2;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Playlist4ServiceException::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.Playlist4ServiceException)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string why = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_why()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->why().data(), this->why().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "why");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_symbol;
        break;
      }

      // optional string symbol = 2;
      case 2: {
        if (tag == 18) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "symbol");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_permanent;
        break;
      }

      // optional bool permanent = 3;
      case 3: {
        if (tag == 24) {
         parse_permanent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &permanent_)));
          set_has_permanent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_serviceErrorClass;
        break;
      }

      // optional string serviceErrorClass = 4;
      case 4: {
        if (tag == 34) {
         parse_serviceErrorClass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serviceerrorclass()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serviceerrorclass().data(), this->serviceerrorclass().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serviceerrorclass");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_inboxErrorKind;
        break;
      }

      // optional .spotify.playlist4.proto.Playlist4InboxErrorKind inboxErrorKind = 5;
      case 5: {
        if (tag == 40) {
         parse_inboxErrorKind:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::spotify::playlist4::proto::Playlist4InboxErrorKind_IsValid(value)) {
            set_inboxerrorkind(static_cast< ::spotify::playlist4::proto::Playlist4InboxErrorKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.Playlist4ServiceException)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.Playlist4ServiceException)
  return false;
#undef DO_
}

void Playlist4ServiceException::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.Playlist4ServiceException)
  // optional string why = 1;
  if (has_why()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->why().data(), this->why().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "why");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->why(), output);
  }

  // optional string symbol = 2;
  if (has_symbol()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // optional bool permanent = 3;
  if (has_permanent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->permanent(), output);
  }

  // optional string serviceErrorClass = 4;
  if (has_serviceerrorclass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceerrorclass().data(), this->serviceerrorclass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceerrorclass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serviceerrorclass(), output);
  }

  // optional .spotify.playlist4.proto.Playlist4InboxErrorKind inboxErrorKind = 5;
  if (has_inboxerrorkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->inboxerrorkind(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.Playlist4ServiceException)
}

::google::protobuf::uint8* Playlist4ServiceException::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.Playlist4ServiceException)
  // optional string why = 1;
  if (has_why()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->why().data(), this->why().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "why");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->why(), target);
  }

  // optional string symbol = 2;
  if (has_symbol()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // optional bool permanent = 3;
  if (has_permanent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->permanent(), target);
  }

  // optional string serviceErrorClass = 4;
  if (has_serviceerrorclass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceerrorclass().data(), this->serviceerrorclass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceerrorclass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serviceerrorclass(), target);
  }

  // optional .spotify.playlist4.proto.Playlist4InboxErrorKind inboxErrorKind = 5;
  if (has_inboxerrorkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->inboxerrorkind(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.Playlist4ServiceException)
  return target;
}

int Playlist4ServiceException::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string why = 1;
    if (has_why()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->why());
    }

    // optional string symbol = 2;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional bool permanent = 3;
    if (has_permanent()) {
      total_size += 1 + 1;
    }

    // optional string serviceErrorClass = 4;
    if (has_serviceerrorclass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serviceerrorclass());
    }

    // optional .spotify.playlist4.proto.Playlist4InboxErrorKind inboxErrorKind = 5;
    if (has_inboxerrorkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inboxerrorkind());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Playlist4ServiceException::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Playlist4ServiceException* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Playlist4ServiceException*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Playlist4ServiceException::MergeFrom(const Playlist4ServiceException& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_why()) {
      set_why(from.why());
    }
    if (from.has_symbol()) {
      set_symbol(from.symbol());
    }
    if (from.has_permanent()) {
      set_permanent(from.permanent());
    }
    if (from.has_serviceerrorclass()) {
      set_serviceerrorclass(from.serviceerrorclass());
    }
    if (from.has_inboxerrorkind()) {
      set_inboxerrorkind(from.inboxerrorkind());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Playlist4ServiceException::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Playlist4ServiceException::CopyFrom(const Playlist4ServiceException& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Playlist4ServiceException::IsInitialized() const {

  return true;
}

void Playlist4ServiceException::Swap(Playlist4ServiceException* other) {
  if (other != this) {
    std::swap(why_, other->why_);
    std::swap(symbol_, other->symbol_);
    std::swap(permanent_, other->permanent_);
    std::swap(serviceerrorclass_, other->serviceerrorclass_);
    std::swap(inboxerrorkind_, other->inboxerrorkind_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Playlist4ServiceException::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Playlist4ServiceException_descriptor_;
  metadata.reflection = Playlist4ServiceException_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SynchronizeReturn::kResultFieldNumber;
const int SynchronizeReturn::kExceptionFieldNumber;
#endif  // !_MSC_VER

SynchronizeReturn::SynchronizeReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.SynchronizeReturn)
}

void SynchronizeReturn::InitAsDefaultInstance() {
  result_ = const_cast< ::spotify::playlist4::proto::SelectedListContent*>(&::spotify::playlist4::proto::SelectedListContent::default_instance());
  exception_ = const_cast< ::spotify::playlist4::proto::Playlist4ServiceException*>(&::spotify::playlist4::proto::Playlist4ServiceException::default_instance());
}

SynchronizeReturn::SynchronizeReturn(const SynchronizeReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.SynchronizeReturn)
}

void SynchronizeReturn::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  exception_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SynchronizeReturn::~SynchronizeReturn() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.SynchronizeReturn)
  SharedDtor();
}

void SynchronizeReturn::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
    delete exception_;
  }
}

void SynchronizeReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SynchronizeReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SynchronizeReturn_descriptor_;
}

const SynchronizeReturn& SynchronizeReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

SynchronizeReturn* SynchronizeReturn::default_instance_ = NULL;

SynchronizeReturn* SynchronizeReturn::New() const {
  return new SynchronizeReturn;
}

void SynchronizeReturn::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_result()) {
      if (result_ != NULL) result_->::spotify::playlist4::proto::SelectedListContent::Clear();
    }
    if (has_exception()) {
      if (exception_ != NULL) exception_->::spotify::playlist4::proto::Playlist4ServiceException::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SynchronizeReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.SynchronizeReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .spotify.playlist4.proto.SelectedListContent result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exception;
        break;
      }

      // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 4;
      case 4: {
        if (tag == 34) {
         parse_exception:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.SynchronizeReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.SynchronizeReturn)
  return false;
#undef DO_
}

void SynchronizeReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.SynchronizeReturn)
  // optional .spotify.playlist4.proto.SelectedListContent result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 4;
  if (has_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->exception(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.SynchronizeReturn)
}

::google::protobuf::uint8* SynchronizeReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.SynchronizeReturn)
  // optional .spotify.playlist4.proto.SelectedListContent result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 4;
  if (has_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->exception(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.SynchronizeReturn)
  return target;
}

int SynchronizeReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .spotify.playlist4.proto.SelectedListContent result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 4;
    if (has_exception()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->exception());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SynchronizeReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SynchronizeReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SynchronizeReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SynchronizeReturn::MergeFrom(const SynchronizeReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::spotify::playlist4::proto::SelectedListContent::MergeFrom(from.result());
    }
    if (from.has_exception()) {
      mutable_exception()->::spotify::playlist4::proto::Playlist4ServiceException::MergeFrom(from.exception());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SynchronizeReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeReturn::CopyFrom(const SynchronizeReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeReturn::IsInitialized() const {

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void SynchronizeReturn::Swap(SynchronizeReturn* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(exception_, other->exception_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SynchronizeReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SynchronizeReturn_descriptor_;
  metadata.reflection = SynchronizeReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Playlist4ServiceCall::kKindFieldNumber;
const int Playlist4ServiceCall::kGetCurrentRevisionArgsFieldNumber;
const int Playlist4ServiceCall::kGetChangesInSequenceRangeArgsFieldNumber;
const int Playlist4ServiceCall::kObliterateListArgsFieldNumber;
const int Playlist4ServiceCall::kSynchronizeArgsFieldNumber;
const int Playlist4ServiceCall::kUpdatePublishedArgsFieldNumber;
const int Playlist4ServiceCall::kGetChangesInSequenceRangeMatchingPl3VersionArgsFieldNumber;
const int Playlist4ServiceCall::kGetSnapshotAtRevisionArgsFieldNumber;
#endif  // !_MSC_VER

Playlist4ServiceCall::Playlist4ServiceCall()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.Playlist4ServiceCall)
}

void Playlist4ServiceCall::InitAsDefaultInstance() {
  getcurrentrevisionargs_ = const_cast< ::spotify::playlist4::proto::GetCurrentRevisionArgs*>(&::spotify::playlist4::proto::GetCurrentRevisionArgs::default_instance());
  getchangesinsequencerangeargs_ = const_cast< ::spotify::playlist4::proto::GetChangesInSequenceRangeArgs*>(&::spotify::playlist4::proto::GetChangesInSequenceRangeArgs::default_instance());
  obliteratelistargs_ = const_cast< ::spotify::playlist4::proto::ObliterateListArgs*>(&::spotify::playlist4::proto::ObliterateListArgs::default_instance());
  synchronizeargs_ = const_cast< ::spotify::playlist4::proto::SynchronizeArgs*>(&::spotify::playlist4::proto::SynchronizeArgs::default_instance());
  updatepublishedargs_ = const_cast< ::spotify::playlist4::proto::UpdatePublishedArgs*>(&::spotify::playlist4::proto::UpdatePublishedArgs::default_instance());
  getchangesinsequencerangematchingpl3versionargs_ = const_cast< ::spotify::playlist4::proto::GetChangesInSequenceRangeMatchingPl3VersionArgs*>(&::spotify::playlist4::proto::GetChangesInSequenceRangeMatchingPl3VersionArgs::default_instance());
  getsnapshotatrevisionargs_ = const_cast< ::spotify::playlist4::proto::GetSnapshotAtRevisionArgs*>(&::spotify::playlist4::proto::GetSnapshotAtRevisionArgs::default_instance());
}

Playlist4ServiceCall::Playlist4ServiceCall(const Playlist4ServiceCall& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.Playlist4ServiceCall)
}

void Playlist4ServiceCall::SharedCtor() {
  _cached_size_ = 0;
  kind_ = 0;
  getcurrentrevisionargs_ = NULL;
  getchangesinsequencerangeargs_ = NULL;
  obliteratelistargs_ = NULL;
  synchronizeargs_ = NULL;
  updatepublishedargs_ = NULL;
  getchangesinsequencerangematchingpl3versionargs_ = NULL;
  getsnapshotatrevisionargs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Playlist4ServiceCall::~Playlist4ServiceCall() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.Playlist4ServiceCall)
  SharedDtor();
}

void Playlist4ServiceCall::SharedDtor() {
  if (this != default_instance_) {
    delete getcurrentrevisionargs_;
    delete getchangesinsequencerangeargs_;
    delete obliteratelistargs_;
    delete synchronizeargs_;
    delete updatepublishedargs_;
    delete getchangesinsequencerangematchingpl3versionargs_;
    delete getsnapshotatrevisionargs_;
  }
}

void Playlist4ServiceCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Playlist4ServiceCall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Playlist4ServiceCall_descriptor_;
}

const Playlist4ServiceCall& Playlist4ServiceCall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

Playlist4ServiceCall* Playlist4ServiceCall::default_instance_ = NULL;

Playlist4ServiceCall* Playlist4ServiceCall::New() const {
  return new Playlist4ServiceCall;
}

void Playlist4ServiceCall::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    kind_ = 0;
    if (has_getcurrentrevisionargs()) {
      if (getcurrentrevisionargs_ != NULL) getcurrentrevisionargs_->::spotify::playlist4::proto::GetCurrentRevisionArgs::Clear();
    }
    if (has_getchangesinsequencerangeargs()) {
      if (getchangesinsequencerangeargs_ != NULL) getchangesinsequencerangeargs_->::spotify::playlist4::proto::GetChangesInSequenceRangeArgs::Clear();
    }
    if (has_obliteratelistargs()) {
      if (obliteratelistargs_ != NULL) obliteratelistargs_->::spotify::playlist4::proto::ObliterateListArgs::Clear();
    }
    if (has_synchronizeargs()) {
      if (synchronizeargs_ != NULL) synchronizeargs_->::spotify::playlist4::proto::SynchronizeArgs::Clear();
    }
    if (has_updatepublishedargs()) {
      if (updatepublishedargs_ != NULL) updatepublishedargs_->::spotify::playlist4::proto::UpdatePublishedArgs::Clear();
    }
    if (has_getchangesinsequencerangematchingpl3versionargs()) {
      if (getchangesinsequencerangematchingpl3versionargs_ != NULL) getchangesinsequencerangematchingpl3versionargs_->::spotify::playlist4::proto::GetChangesInSequenceRangeMatchingPl3VersionArgs::Clear();
    }
    if (has_getsnapshotatrevisionargs()) {
      if (getsnapshotatrevisionargs_ != NULL) getsnapshotatrevisionargs_->::spotify::playlist4::proto::GetSnapshotAtRevisionArgs::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Playlist4ServiceCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.Playlist4ServiceCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::spotify::playlist4::proto::Playlist4ServiceMethodKind_IsValid(value)) {
            set_kind(static_cast< ::spotify::playlist4::proto::Playlist4ServiceMethodKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_getCurrentRevisionArgs;
        break;
      }

      // optional .spotify.playlist4.proto.GetCurrentRevisionArgs getCurrentRevisionArgs = 2;
      case 2: {
        if (tag == 18) {
         parse_getCurrentRevisionArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getcurrentrevisionargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getChangesInSequenceRangeArgs;
        break;
      }

      // optional .spotify.playlist4.proto.GetChangesInSequenceRangeArgs getChangesInSequenceRangeArgs = 3;
      case 3: {
        if (tag == 26) {
         parse_getChangesInSequenceRangeArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getchangesinsequencerangeargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_obliterateListArgs;
        break;
      }

      // optional .spotify.playlist4.proto.ObliterateListArgs obliterateListArgs = 4;
      case 4: {
        if (tag == 34) {
         parse_obliterateListArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obliteratelistargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_synchronizeArgs;
        break;
      }

      // optional .spotify.playlist4.proto.SynchronizeArgs synchronizeArgs = 5;
      case 5: {
        if (tag == 42) {
         parse_synchronizeArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_synchronizeargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_updatePublishedArgs;
        break;
      }

      // optional .spotify.playlist4.proto.UpdatePublishedArgs updatePublishedArgs = 6;
      case 6: {
        if (tag == 50) {
         parse_updatePublishedArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updatepublishedargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_getChangesInSequenceRangeMatchingPl3VersionArgs;
        break;
      }

      // optional .spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs getChangesInSequenceRangeMatchingPl3VersionArgs = 7;
      case 7: {
        if (tag == 58) {
         parse_getChangesInSequenceRangeMatchingPl3VersionArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getchangesinsequencerangematchingpl3versionargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_getSnapshotAtRevisionArgs;
        break;
      }

      // optional .spotify.playlist4.proto.GetSnapshotAtRevisionArgs getSnapshotAtRevisionArgs = 8;
      case 8: {
        if (tag == 66) {
         parse_getSnapshotAtRevisionArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsnapshotatrevisionargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.Playlist4ServiceCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.Playlist4ServiceCall)
  return false;
#undef DO_
}

void Playlist4ServiceCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.Playlist4ServiceCall)
  // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // optional .spotify.playlist4.proto.GetCurrentRevisionArgs getCurrentRevisionArgs = 2;
  if (has_getcurrentrevisionargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->getcurrentrevisionargs(), output);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeArgs getChangesInSequenceRangeArgs = 3;
  if (has_getchangesinsequencerangeargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->getchangesinsequencerangeargs(), output);
  }

  // optional .spotify.playlist4.proto.ObliterateListArgs obliterateListArgs = 4;
  if (has_obliteratelistargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->obliteratelistargs(), output);
  }

  // optional .spotify.playlist4.proto.SynchronizeArgs synchronizeArgs = 5;
  if (has_synchronizeargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->synchronizeargs(), output);
  }

  // optional .spotify.playlist4.proto.UpdatePublishedArgs updatePublishedArgs = 6;
  if (has_updatepublishedargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->updatepublishedargs(), output);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs getChangesInSequenceRangeMatchingPl3VersionArgs = 7;
  if (has_getchangesinsequencerangematchingpl3versionargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->getchangesinsequencerangematchingpl3versionargs(), output);
  }

  // optional .spotify.playlist4.proto.GetSnapshotAtRevisionArgs getSnapshotAtRevisionArgs = 8;
  if (has_getsnapshotatrevisionargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->getsnapshotatrevisionargs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.Playlist4ServiceCall)
}

::google::protobuf::uint8* Playlist4ServiceCall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.Playlist4ServiceCall)
  // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // optional .spotify.playlist4.proto.GetCurrentRevisionArgs getCurrentRevisionArgs = 2;
  if (has_getcurrentrevisionargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->getcurrentrevisionargs(), target);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeArgs getChangesInSequenceRangeArgs = 3;
  if (has_getchangesinsequencerangeargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->getchangesinsequencerangeargs(), target);
  }

  // optional .spotify.playlist4.proto.ObliterateListArgs obliterateListArgs = 4;
  if (has_obliteratelistargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->obliteratelistargs(), target);
  }

  // optional .spotify.playlist4.proto.SynchronizeArgs synchronizeArgs = 5;
  if (has_synchronizeargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->synchronizeargs(), target);
  }

  // optional .spotify.playlist4.proto.UpdatePublishedArgs updatePublishedArgs = 6;
  if (has_updatepublishedargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->updatepublishedargs(), target);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs getChangesInSequenceRangeMatchingPl3VersionArgs = 7;
  if (has_getchangesinsequencerangematchingpl3versionargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->getchangesinsequencerangematchingpl3versionargs(), target);
  }

  // optional .spotify.playlist4.proto.GetSnapshotAtRevisionArgs getSnapshotAtRevisionArgs = 8;
  if (has_getsnapshotatrevisionargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->getsnapshotatrevisionargs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.Playlist4ServiceCall)
  return target;
}

int Playlist4ServiceCall::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional .spotify.playlist4.proto.GetCurrentRevisionArgs getCurrentRevisionArgs = 2;
    if (has_getcurrentrevisionargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getcurrentrevisionargs());
    }

    // optional .spotify.playlist4.proto.GetChangesInSequenceRangeArgs getChangesInSequenceRangeArgs = 3;
    if (has_getchangesinsequencerangeargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getchangesinsequencerangeargs());
    }

    // optional .spotify.playlist4.proto.ObliterateListArgs obliterateListArgs = 4;
    if (has_obliteratelistargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obliteratelistargs());
    }

    // optional .spotify.playlist4.proto.SynchronizeArgs synchronizeArgs = 5;
    if (has_synchronizeargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->synchronizeargs());
    }

    // optional .spotify.playlist4.proto.UpdatePublishedArgs updatePublishedArgs = 6;
    if (has_updatepublishedargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updatepublishedargs());
    }

    // optional .spotify.playlist4.proto.GetChangesInSequenceRangeMatchingPl3VersionArgs getChangesInSequenceRangeMatchingPl3VersionArgs = 7;
    if (has_getchangesinsequencerangematchingpl3versionargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getchangesinsequencerangematchingpl3versionargs());
    }

    // optional .spotify.playlist4.proto.GetSnapshotAtRevisionArgs getSnapshotAtRevisionArgs = 8;
    if (has_getsnapshotatrevisionargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getsnapshotatrevisionargs());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Playlist4ServiceCall::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Playlist4ServiceCall* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Playlist4ServiceCall*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Playlist4ServiceCall::MergeFrom(const Playlist4ServiceCall& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_getcurrentrevisionargs()) {
      mutable_getcurrentrevisionargs()->::spotify::playlist4::proto::GetCurrentRevisionArgs::MergeFrom(from.getcurrentrevisionargs());
    }
    if (from.has_getchangesinsequencerangeargs()) {
      mutable_getchangesinsequencerangeargs()->::spotify::playlist4::proto::GetChangesInSequenceRangeArgs::MergeFrom(from.getchangesinsequencerangeargs());
    }
    if (from.has_obliteratelistargs()) {
      mutable_obliteratelistargs()->::spotify::playlist4::proto::ObliterateListArgs::MergeFrom(from.obliteratelistargs());
    }
    if (from.has_synchronizeargs()) {
      mutable_synchronizeargs()->::spotify::playlist4::proto::SynchronizeArgs::MergeFrom(from.synchronizeargs());
    }
    if (from.has_updatepublishedargs()) {
      mutable_updatepublishedargs()->::spotify::playlist4::proto::UpdatePublishedArgs::MergeFrom(from.updatepublishedargs());
    }
    if (from.has_getchangesinsequencerangematchingpl3versionargs()) {
      mutable_getchangesinsequencerangematchingpl3versionargs()->::spotify::playlist4::proto::GetChangesInSequenceRangeMatchingPl3VersionArgs::MergeFrom(from.getchangesinsequencerangematchingpl3versionargs());
    }
    if (from.has_getsnapshotatrevisionargs()) {
      mutable_getsnapshotatrevisionargs()->::spotify::playlist4::proto::GetSnapshotAtRevisionArgs::MergeFrom(from.getsnapshotatrevisionargs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Playlist4ServiceCall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Playlist4ServiceCall::CopyFrom(const Playlist4ServiceCall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Playlist4ServiceCall::IsInitialized() const {

  if (has_synchronizeargs()) {
    if (!this->synchronizeargs().IsInitialized()) return false;
  }
  return true;
}

void Playlist4ServiceCall::Swap(Playlist4ServiceCall* other) {
  if (other != this) {
    std::swap(kind_, other->kind_);
    std::swap(getcurrentrevisionargs_, other->getcurrentrevisionargs_);
    std::swap(getchangesinsequencerangeargs_, other->getchangesinsequencerangeargs_);
    std::swap(obliteratelistargs_, other->obliteratelistargs_);
    std::swap(synchronizeargs_, other->synchronizeargs_);
    std::swap(updatepublishedargs_, other->updatepublishedargs_);
    std::swap(getchangesinsequencerangematchingpl3versionargs_, other->getchangesinsequencerangematchingpl3versionargs_);
    std::swap(getsnapshotatrevisionargs_, other->getsnapshotatrevisionargs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Playlist4ServiceCall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Playlist4ServiceCall_descriptor_;
  metadata.reflection = Playlist4ServiceCall_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Playlist4ServiceReturn::kKindFieldNumber;
const int Playlist4ServiceReturn::kExceptionFieldNumber;
const int Playlist4ServiceReturn::kGetCurrentRevisionReturnFieldNumber;
const int Playlist4ServiceReturn::kGetChangesInSequenceRangeReturnFieldNumber;
const int Playlist4ServiceReturn::kObliterateListReturnFieldNumber;
const int Playlist4ServiceReturn::kSynchronizeReturnFieldNumber;
const int Playlist4ServiceReturn::kUpdatePublishedReturnFieldNumber;
const int Playlist4ServiceReturn::kGetChangesInSequenceRangeMatchingPl3VersionReturnFieldNumber;
const int Playlist4ServiceReturn::kGetSnapshotAtRevisionReturnFieldNumber;
#endif  // !_MSC_VER

Playlist4ServiceReturn::Playlist4ServiceReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.Playlist4ServiceReturn)
}

void Playlist4ServiceReturn::InitAsDefaultInstance() {
  exception_ = const_cast< ::spotify::playlist4::proto::Playlist4ServiceException*>(&::spotify::playlist4::proto::Playlist4ServiceException::default_instance());
  getchangesinsequencerangereturn_ = const_cast< ::spotify::playlist4::proto::GetChangesInSequenceRangeReturn*>(&::spotify::playlist4::proto::GetChangesInSequenceRangeReturn::default_instance());
  synchronizereturn_ = const_cast< ::spotify::playlist4::proto::SynchronizeReturn*>(&::spotify::playlist4::proto::SynchronizeReturn::default_instance());
  getchangesinsequencerangematchingpl3versionreturn_ = const_cast< ::spotify::playlist4::proto::GetChangesInSequenceRangeReturn*>(&::spotify::playlist4::proto::GetChangesInSequenceRangeReturn::default_instance());
}

Playlist4ServiceReturn::Playlist4ServiceReturn(const Playlist4ServiceReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.Playlist4ServiceReturn)
}

void Playlist4ServiceReturn::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  kind_ = 0;
  exception_ = NULL;
  getcurrentrevisionreturn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  getchangesinsequencerangereturn_ = NULL;
  obliteratelistreturn_ = false;
  synchronizereturn_ = NULL;
  updatepublishedreturn_ = false;
  getchangesinsequencerangematchingpl3versionreturn_ = NULL;
  getsnapshotatrevisionreturn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Playlist4ServiceReturn::~Playlist4ServiceReturn() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.Playlist4ServiceReturn)
  SharedDtor();
}

void Playlist4ServiceReturn::SharedDtor() {
  if (getcurrentrevisionreturn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete getcurrentrevisionreturn_;
  }
  if (getsnapshotatrevisionreturn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete getsnapshotatrevisionreturn_;
  }
  if (this != default_instance_) {
    delete exception_;
    delete getchangesinsequencerangereturn_;
    delete synchronizereturn_;
    delete getchangesinsequencerangematchingpl3versionreturn_;
  }
}

void Playlist4ServiceReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Playlist4ServiceReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Playlist4ServiceReturn_descriptor_;
}

const Playlist4ServiceReturn& Playlist4ServiceReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

Playlist4ServiceReturn* Playlist4ServiceReturn::default_instance_ = NULL;

Playlist4ServiceReturn* Playlist4ServiceReturn::New() const {
  return new Playlist4ServiceReturn;
}

void Playlist4ServiceReturn::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Playlist4ServiceReturn*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(kind_, updatepublishedreturn_);
    if (has_exception()) {
      if (exception_ != NULL) exception_->::spotify::playlist4::proto::Playlist4ServiceException::Clear();
    }
    if (has_getcurrentrevisionreturn()) {
      if (getcurrentrevisionreturn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        getcurrentrevisionreturn_->clear();
      }
    }
    if (has_getchangesinsequencerangereturn()) {
      if (getchangesinsequencerangereturn_ != NULL) getchangesinsequencerangereturn_->::spotify::playlist4::proto::GetChangesInSequenceRangeReturn::Clear();
    }
    if (has_synchronizereturn()) {
      if (synchronizereturn_ != NULL) synchronizereturn_->::spotify::playlist4::proto::SynchronizeReturn::Clear();
    }
    if (has_getchangesinsequencerangematchingpl3versionreturn()) {
      if (getchangesinsequencerangematchingpl3versionreturn_ != NULL) getchangesinsequencerangematchingpl3versionreturn_->::spotify::playlist4::proto::GetChangesInSequenceRangeReturn::Clear();
    }
  }
  if (has_getsnapshotatrevisionreturn()) {
    if (getsnapshotatrevisionreturn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      getsnapshotatrevisionreturn_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Playlist4ServiceReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.Playlist4ServiceReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::spotify::playlist4::proto::Playlist4ServiceMethodKind_IsValid(value)) {
            set_kind(static_cast< ::spotify::playlist4::proto::Playlist4ServiceMethodKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exception;
        break;
      }

      // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 2;
      case 2: {
        if (tag == 18) {
         parse_exception:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getCurrentRevisionReturn;
        break;
      }

      // optional bytes getCurrentRevisionReturn = 3;
      case 3: {
        if (tag == 26) {
         parse_getCurrentRevisionReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_getcurrentrevisionreturn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_getChangesInSequenceRangeReturn;
        break;
      }

      // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeReturn = 4;
      case 4: {
        if (tag == 34) {
         parse_getChangesInSequenceRangeReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getchangesinsequencerangereturn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_obliterateListReturn;
        break;
      }

      // optional bool obliterateListReturn = 5;
      case 5: {
        if (tag == 40) {
         parse_obliterateListReturn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &obliteratelistreturn_)));
          set_has_obliteratelistreturn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_synchronizeReturn;
        break;
      }

      // optional .spotify.playlist4.proto.SynchronizeReturn synchronizeReturn = 6;
      case 6: {
        if (tag == 50) {
         parse_synchronizeReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_synchronizereturn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_updatePublishedReturn;
        break;
      }

      // optional bool updatePublishedReturn = 7;
      case 7: {
        if (tag == 56) {
         parse_updatePublishedReturn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updatepublishedreturn_)));
          set_has_updatepublishedreturn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_getChangesInSequenceRangeMatchingPl3VersionReturn;
        break;
      }

      // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeMatchingPl3VersionReturn = 8;
      case 8: {
        if (tag == 66) {
         parse_getChangesInSequenceRangeMatchingPl3VersionReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getchangesinsequencerangematchingpl3versionreturn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_getSnapshotAtRevisionReturn;
        break;
      }

      // optional bytes getSnapshotAtRevisionReturn = 9;
      case 9: {
        if (tag == 74) {
         parse_getSnapshotAtRevisionReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_getsnapshotatrevisionreturn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.Playlist4ServiceReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.Playlist4ServiceReturn)
  return false;
#undef DO_
}

void Playlist4ServiceReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.Playlist4ServiceReturn)
  // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 2;
  if (has_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->exception(), output);
  }

  // optional bytes getCurrentRevisionReturn = 3;
  if (has_getcurrentrevisionreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->getcurrentrevisionreturn(), output);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeReturn = 4;
  if (has_getchangesinsequencerangereturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->getchangesinsequencerangereturn(), output);
  }

  // optional bool obliterateListReturn = 5;
  if (has_obliteratelistreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->obliteratelistreturn(), output);
  }

  // optional .spotify.playlist4.proto.SynchronizeReturn synchronizeReturn = 6;
  if (has_synchronizereturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->synchronizereturn(), output);
  }

  // optional bool updatePublishedReturn = 7;
  if (has_updatepublishedreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->updatepublishedreturn(), output);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeMatchingPl3VersionReturn = 8;
  if (has_getchangesinsequencerangematchingpl3versionreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->getchangesinsequencerangematchingpl3versionreturn(), output);
  }

  // optional bytes getSnapshotAtRevisionReturn = 9;
  if (has_getsnapshotatrevisionreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->getsnapshotatrevisionreturn(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.Playlist4ServiceReturn)
}

::google::protobuf::uint8* Playlist4ServiceReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.Playlist4ServiceReturn)
  // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 2;
  if (has_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->exception(), target);
  }

  // optional bytes getCurrentRevisionReturn = 3;
  if (has_getcurrentrevisionreturn()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->getcurrentrevisionreturn(), target);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeReturn = 4;
  if (has_getchangesinsequencerangereturn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->getchangesinsequencerangereturn(), target);
  }

  // optional bool obliterateListReturn = 5;
  if (has_obliteratelistreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->obliteratelistreturn(), target);
  }

  // optional .spotify.playlist4.proto.SynchronizeReturn synchronizeReturn = 6;
  if (has_synchronizereturn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->synchronizereturn(), target);
  }

  // optional bool updatePublishedReturn = 7;
  if (has_updatepublishedreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->updatepublishedreturn(), target);
  }

  // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeMatchingPl3VersionReturn = 8;
  if (has_getchangesinsequencerangematchingpl3versionreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->getchangesinsequencerangematchingpl3versionreturn(), target);
  }

  // optional bytes getSnapshotAtRevisionReturn = 9;
  if (has_getsnapshotatrevisionreturn()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->getsnapshotatrevisionreturn(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.Playlist4ServiceReturn)
  return target;
}

int Playlist4ServiceReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .spotify.playlist4.proto.Playlist4ServiceMethodKind kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional .spotify.playlist4.proto.Playlist4ServiceException exception = 2;
    if (has_exception()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->exception());
    }

    // optional bytes getCurrentRevisionReturn = 3;
    if (has_getcurrentrevisionreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->getcurrentrevisionreturn());
    }

    // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeReturn = 4;
    if (has_getchangesinsequencerangereturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getchangesinsequencerangereturn());
    }

    // optional bool obliterateListReturn = 5;
    if (has_obliteratelistreturn()) {
      total_size += 1 + 1;
    }

    // optional .spotify.playlist4.proto.SynchronizeReturn synchronizeReturn = 6;
    if (has_synchronizereturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->synchronizereturn());
    }

    // optional bool updatePublishedReturn = 7;
    if (has_updatepublishedreturn()) {
      total_size += 1 + 1;
    }

    // optional .spotify.playlist4.proto.GetChangesInSequenceRangeReturn getChangesInSequenceRangeMatchingPl3VersionReturn = 8;
    if (has_getchangesinsequencerangematchingpl3versionreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getchangesinsequencerangematchingpl3versionreturn());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes getSnapshotAtRevisionReturn = 9;
    if (has_getsnapshotatrevisionreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->getsnapshotatrevisionreturn());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Playlist4ServiceReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Playlist4ServiceReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Playlist4ServiceReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Playlist4ServiceReturn::MergeFrom(const Playlist4ServiceReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_exception()) {
      mutable_exception()->::spotify::playlist4::proto::Playlist4ServiceException::MergeFrom(from.exception());
    }
    if (from.has_getcurrentrevisionreturn()) {
      set_getcurrentrevisionreturn(from.getcurrentrevisionreturn());
    }
    if (from.has_getchangesinsequencerangereturn()) {
      mutable_getchangesinsequencerangereturn()->::spotify::playlist4::proto::GetChangesInSequenceRangeReturn::MergeFrom(from.getchangesinsequencerangereturn());
    }
    if (from.has_obliteratelistreturn()) {
      set_obliteratelistreturn(from.obliteratelistreturn());
    }
    if (from.has_synchronizereturn()) {
      mutable_synchronizereturn()->::spotify::playlist4::proto::SynchronizeReturn::MergeFrom(from.synchronizereturn());
    }
    if (from.has_updatepublishedreturn()) {
      set_updatepublishedreturn(from.updatepublishedreturn());
    }
    if (from.has_getchangesinsequencerangematchingpl3versionreturn()) {
      mutable_getchangesinsequencerangematchingpl3versionreturn()->::spotify::playlist4::proto::GetChangesInSequenceRangeReturn::MergeFrom(from.getchangesinsequencerangematchingpl3versionreturn());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_getsnapshotatrevisionreturn()) {
      set_getsnapshotatrevisionreturn(from.getsnapshotatrevisionreturn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Playlist4ServiceReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Playlist4ServiceReturn::CopyFrom(const Playlist4ServiceReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Playlist4ServiceReturn::IsInitialized() const {

  if (has_getchangesinsequencerangereturn()) {
    if (!this->getchangesinsequencerangereturn().IsInitialized()) return false;
  }
  if (has_synchronizereturn()) {
    if (!this->synchronizereturn().IsInitialized()) return false;
  }
  if (has_getchangesinsequencerangematchingpl3versionreturn()) {
    if (!this->getchangesinsequencerangematchingpl3versionreturn().IsInitialized()) return false;
  }
  return true;
}

void Playlist4ServiceReturn::Swap(Playlist4ServiceReturn* other) {
  if (other != this) {
    std::swap(kind_, other->kind_);
    std::swap(exception_, other->exception_);
    std::swap(getcurrentrevisionreturn_, other->getcurrentrevisionreturn_);
    std::swap(getchangesinsequencerangereturn_, other->getchangesinsequencerangereturn_);
    std::swap(obliteratelistreturn_, other->obliteratelistreturn_);
    std::swap(synchronizereturn_, other->synchronizereturn_);
    std::swap(updatepublishedreturn_, other->updatepublishedreturn_);
    std::swap(getchangesinsequencerangematchingpl3versionreturn_, other->getchangesinsequencerangematchingpl3versionreturn_);
    std::swap(getsnapshotatrevisionreturn_, other->getsnapshotatrevisionreturn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Playlist4ServiceReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Playlist4ServiceReturn_descriptor_;
  metadata.reflection = Playlist4ServiceReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateListReply::kUriFieldNumber;
const int CreateListReply::kRevisionFieldNumber;
#endif  // !_MSC_VER

CreateListReply::CreateListReply()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.CreateListReply)
}

void CreateListReply::InitAsDefaultInstance() {
}

CreateListReply::CreateListReply(const CreateListReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.CreateListReply)
}

void CreateListReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateListReply::~CreateListReply() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.CreateListReply)
  SharedDtor();
}

void CreateListReply::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revision_;
  }
  if (this != default_instance_) {
  }
}

void CreateListReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateListReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateListReply_descriptor_;
}

const CreateListReply& CreateListReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

CreateListReply* CreateListReply::default_instance_ = NULL;

CreateListReply* CreateListReply::New() const {
  return new CreateListReply;
}

void CreateListReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_revision()) {
      if (revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revision_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.CreateListReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_revision;
        break;
      }

      // optional bytes revision = 2;
      case 2: {
        if (tag == 18) {
         parse_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_revision()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.CreateListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.CreateListReply)
  return false;
#undef DO_
}

void CreateListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.CreateListReply)
  // required bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional bytes revision = 2;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->revision(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.CreateListReply)
}

::google::protobuf::uint8* CreateListReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.CreateListReply)
  // required bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional bytes revision = 2;
  if (has_revision()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->revision(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.CreateListReply)
  return target;
}

int CreateListReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional bytes revision = 2;
    if (has_revision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->revision());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateListReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateListReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateListReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateListReply::MergeFrom(const CreateListReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_revision()) {
      set_revision(from.revision());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateListReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateListReply::CopyFrom(const CreateListReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateListReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateListReply::Swap(CreateListReply* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(revision_, other->revision_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateListReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateListReply_descriptor_;
  metadata.reflection = CreateListReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModifyReply::kUriFieldNumber;
const int ModifyReply::kRevisionFieldNumber;
#endif  // !_MSC_VER

ModifyReply::ModifyReply()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.ModifyReply)
}

void ModifyReply::InitAsDefaultInstance() {
}

ModifyReply::ModifyReply(const ModifyReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.ModifyReply)
}

void ModifyReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModifyReply::~ModifyReply() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.ModifyReply)
  SharedDtor();
}

void ModifyReply::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revision_;
  }
  if (this != default_instance_) {
  }
}

void ModifyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyReply_descriptor_;
}

const ModifyReply& ModifyReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

ModifyReply* ModifyReply::default_instance_ = NULL;

ModifyReply* ModifyReply::New() const {
  return new ModifyReply;
}

void ModifyReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_revision()) {
      if (revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revision_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModifyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.ModifyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_revision;
        break;
      }

      // optional bytes revision = 2;
      case 2: {
        if (tag == 18) {
         parse_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_revision()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.ModifyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.ModifyReply)
  return false;
#undef DO_
}

void ModifyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.ModifyReply)
  // required bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional bytes revision = 2;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->revision(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.ModifyReply)
}

::google::protobuf::uint8* ModifyReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.ModifyReply)
  // required bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional bytes revision = 2;
  if (has_revision()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->revision(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.ModifyReply)
  return target;
}

int ModifyReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional bytes revision = 2;
    if (has_revision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->revision());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModifyReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModifyReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModifyReply::MergeFrom(const ModifyReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_revision()) {
      set_revision(from.revision());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModifyReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyReply::CopyFrom(const ModifyReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ModifyReply::Swap(ModifyReply* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(revision_, other->revision_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModifyReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyReply_descriptor_;
  metadata.reflection = ModifyReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlaylistModificationInfo::kUriFieldNumber;
const int PlaylistModificationInfo::kNewRevisionFieldNumber;
#endif  // !_MSC_VER

PlaylistModificationInfo::PlaylistModificationInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.PlaylistModificationInfo)
}

void PlaylistModificationInfo::InitAsDefaultInstance() {
}

PlaylistModificationInfo::PlaylistModificationInfo(const PlaylistModificationInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.PlaylistModificationInfo)
}

void PlaylistModificationInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_revision_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlaylistModificationInfo::~PlaylistModificationInfo() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.PlaylistModificationInfo)
  SharedDtor();
}

void PlaylistModificationInfo::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (new_revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete new_revision_;
  }
  if (this != default_instance_) {
  }
}

void PlaylistModificationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaylistModificationInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlaylistModificationInfo_descriptor_;
}

const PlaylistModificationInfo& PlaylistModificationInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4service_2eproto();
  return *default_instance_;
}

PlaylistModificationInfo* PlaylistModificationInfo::default_instance_ = NULL;

PlaylistModificationInfo* PlaylistModificationInfo::New() const {
  return new PlaylistModificationInfo;
}

void PlaylistModificationInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_new_revision()) {
      if (new_revision_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        new_revision_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlaylistModificationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.PlaylistModificationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_new_revision;
        break;
      }

      // optional bytes new_revision = 2;
      case 2: {
        if (tag == 18) {
         parse_new_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_new_revision()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.PlaylistModificationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.PlaylistModificationInfo)
  return false;
#undef DO_
}

void PlaylistModificationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.PlaylistModificationInfo)
  // optional bytes uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uri(), output);
  }

  // optional bytes new_revision = 2;
  if (has_new_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->new_revision(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.PlaylistModificationInfo)
}

::google::protobuf::uint8* PlaylistModificationInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.PlaylistModificationInfo)
  // optional bytes uri = 1;
  if (has_uri()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uri(), target);
  }

  // optional bytes new_revision = 2;
  if (has_new_revision()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->new_revision(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.PlaylistModificationInfo)
  return target;
}

int PlaylistModificationInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uri());
    }

    // optional bytes new_revision = 2;
    if (has_new_revision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->new_revision());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaylistModificationInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlaylistModificationInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlaylistModificationInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlaylistModificationInfo::MergeFrom(const PlaylistModificationInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_new_revision()) {
      set_new_revision(from.new_revision());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlaylistModificationInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaylistModificationInfo::CopyFrom(const PlaylistModificationInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaylistModificationInfo::IsInitialized() const {

  return true;
}

void PlaylistModificationInfo::Swap(PlaylistModificationInfo* other) {
  if (other != this) {
    std::swap(uri_, other->uri_);
    std::swap(new_revision_, other->new_revision_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlaylistModificationInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlaylistModificationInfo_descriptor_;
  metadata.reflection = PlaylistModificationInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace playlist4
}  // namespace spotify

// @@protoc_insertion_point(global_scope)
