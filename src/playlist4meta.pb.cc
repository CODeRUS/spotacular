// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playlist4meta.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "playlist4meta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace spotify {
namespace playlist4 {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ListChecksum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListChecksum_reflection_ = NULL;
const ::google::protobuf::Descriptor* DownloadFormat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DownloadFormat_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DownloadFormat_Codec_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ListAttributes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListAttributes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemAttributes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemAttributes_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringAttributes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringAttributes_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ListAttributeKind_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ItemAttributeKind_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_playlist4meta_2eproto() {
  protobuf_AddDesc_playlist4meta_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "playlist4meta.proto");
  GOOGLE_CHECK(file != NULL);
  ListChecksum_descriptor_ = file->message_type(0);
  static const int ListChecksum_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListChecksum, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListChecksum, sha1_),
  };
  ListChecksum_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListChecksum_descriptor_,
      ListChecksum::default_instance_,
      ListChecksum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListChecksum, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListChecksum, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListChecksum));
  DownloadFormat_descriptor_ = file->message_type(1);
  static const int DownloadFormat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFormat, codec_),
  };
  DownloadFormat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DownloadFormat_descriptor_,
      DownloadFormat::default_instance_,
      DownloadFormat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFormat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadFormat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DownloadFormat));
  DownloadFormat_Codec_descriptor_ = DownloadFormat_descriptor_->enum_type(0);
  ListAttributes_descriptor_ = file->message_type(2);
  static const int ListAttributes_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, picture_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, collaborative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, pl3_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, deleted_by_owner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, restricted_collaborative_),
  };
  ListAttributes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListAttributes_descriptor_,
      ListAttributes::default_instance_,
      ListAttributes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAttributes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListAttributes));
  ItemAttributes_descriptor_ = file->message_type(3);
  static const int ItemAttributes_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, added_by_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, seen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, download_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, sevendigital_id_),
  };
  ItemAttributes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemAttributes_descriptor_,
      ItemAttributes::default_instance_,
      ItemAttributes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttributes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemAttributes));
  StringAttribute_descriptor_ = file->message_type(4);
  static const int StringAttribute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttribute, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttribute, value_),
  };
  StringAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StringAttribute_descriptor_,
      StringAttribute::default_instance_,
      StringAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StringAttribute));
  StringAttributes_descriptor_ = file->message_type(5);
  static const int StringAttributes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttributes, attribute_),
  };
  StringAttributes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StringAttributes_descriptor_,
      StringAttributes::default_instance_,
      StringAttributes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttributes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringAttributes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StringAttributes));
  ListAttributeKind_descriptor_ = file->enum_type(0);
  ItemAttributeKind_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_playlist4meta_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListChecksum_descriptor_, &ListChecksum::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DownloadFormat_descriptor_, &DownloadFormat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListAttributes_descriptor_, &ListAttributes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemAttributes_descriptor_, &ItemAttributes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StringAttribute_descriptor_, &StringAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StringAttributes_descriptor_, &StringAttributes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_playlist4meta_2eproto() {
  delete ListChecksum::default_instance_;
  delete ListChecksum_reflection_;
  delete DownloadFormat::default_instance_;
  delete DownloadFormat_reflection_;
  delete ListAttributes::default_instance_;
  delete ListAttributes_reflection_;
  delete ItemAttributes::default_instance_;
  delete ItemAttributes_reflection_;
  delete StringAttribute::default_instance_;
  delete StringAttribute_reflection_;
  delete StringAttributes::default_instance_;
  delete StringAttributes_reflection_;
}

void protobuf_AddDesc_playlist4meta_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023playlist4meta.proto\022\027spotify.playlist4"
    ".proto\"-\n\014ListChecksum\022\017\n\007version\030\001 \002(\005\022"
    "\014\n\004sha1\030\004 \001(\014\"\230\001\n\016DownloadFormat\022<\n\005code"
    "c\030\001 \002(\0162-.spotify.playlist4.proto.Downlo"
    "adFormat.Codec\"H\n\005Codec\022\021\n\rCODEC_UNKNOWN"
    "\020\000\022\016\n\nOGG_VORBIS\020\001\022\010\n\004FLAC\020\002\022\022\n\016MPEG_1_L"
    "AYER_3\020\003\"\254\001\n\016ListAttributes\022\014\n\004name\030\001 \001("
    "\t\022\023\n\013description\030\002 \001(\t\022\017\n\007picture\030\003 \001(\014\022"
    "\025\n\rcollaborative\030\004 \001(\010\022\023\n\013pl3_version\030\005 "
    "\001(\t\022\030\n\020deleted_by_owner\030\006 \001(\010\022 \n\030restric"
    "ted_collaborative\030\007 \001(\010\"\234\001\n\016ItemAttribut"
    "es\022\020\n\010added_by\030\001 \001(\t\022\017\n\007message\030\003 \001(\t\022\014\n"
    "\004seen\030\004 \001(\010\022@\n\017download_format\030\006 \001(\0132\'.s"
    "potify.playlist4.proto.DownloadFormat\022\027\n"
    "\017sevendigital_id\030\007 \001(\t\"-\n\017StringAttribut"
    "e\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"O\n\020StringA"
    "ttributes\022;\n\tattribute\030\001 \003(\0132(.spotify.p"
    "laylist4.proto.StringAttribute*\310\001\n\021ListA"
    "ttributeKind\022\020\n\014LIST_UNKNOWN\020\000\022\r\n\tLIST_N"
    "AME\020\001\022\024\n\020LIST_DESCRIPTION\020\002\022\020\n\014LIST_PICT"
    "URE\020\003\022\026\n\022LIST_COLLABORATIVE\020\004\022\024\n\020LIST_PL"
    "3_VERSION\020\005\022\031\n\025LIST_DELETED_BY_OWNER\020\006\022!"
    "\n\035LIST_RESTRICTED_COLLABORATIVE\020\007*\350\001\n\021It"
    "emAttributeKind\022\020\n\014ITEM_UNKNOWN\020\000\022\021\n\rITE"
    "M_ADDED_BY\020\001\022\022\n\016ITEM_TIMESTAMP\020\002\022\020\n\014ITEM"
    "_MESSAGE\020\003\022\r\n\tITEM_SEEN\020\004\022\027\n\023ITEM_DOWNLO"
    "AD_COUNT\020\005\022\030\n\024ITEM_DOWNLOAD_FORMAT\020\006\022\030\n\024"
    "ITEM_SEVENDIGITAL_ID\020\007\022\032\n\026ITEM_SEVENDIGI"
    "TAL_LEFT\020\010\022\020\n\014ITEM_SEEN_AT\020\tB\037\n\033com.spot"
    "ify.playlist4.protoH\001", 1181);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "playlist4meta.proto", &protobuf_RegisterTypes);
  ListChecksum::default_instance_ = new ListChecksum();
  DownloadFormat::default_instance_ = new DownloadFormat();
  ListAttributes::default_instance_ = new ListAttributes();
  ItemAttributes::default_instance_ = new ItemAttributes();
  StringAttribute::default_instance_ = new StringAttribute();
  StringAttributes::default_instance_ = new StringAttributes();
  ListChecksum::default_instance_->InitAsDefaultInstance();
  DownloadFormat::default_instance_->InitAsDefaultInstance();
  ListAttributes::default_instance_->InitAsDefaultInstance();
  ItemAttributes::default_instance_->InitAsDefaultInstance();
  StringAttribute::default_instance_->InitAsDefaultInstance();
  StringAttributes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_playlist4meta_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_playlist4meta_2eproto {
  StaticDescriptorInitializer_playlist4meta_2eproto() {
    protobuf_AddDesc_playlist4meta_2eproto();
  }
} static_descriptor_initializer_playlist4meta_2eproto_;
const ::google::protobuf::EnumDescriptor* ListAttributeKind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListAttributeKind_descriptor_;
}
bool ListAttributeKind_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ItemAttributeKind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemAttributeKind_descriptor_;
}
bool ItemAttributeKind_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ListChecksum::kVersionFieldNumber;
const int ListChecksum::kSha1FieldNumber;
#endif  // !_MSC_VER

ListChecksum::ListChecksum()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.ListChecksum)
}

void ListChecksum::InitAsDefaultInstance() {
}

ListChecksum::ListChecksum(const ListChecksum& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.ListChecksum)
}

void ListChecksum::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_ = 0;
  sha1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListChecksum::~ListChecksum() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.ListChecksum)
  SharedDtor();
}

void ListChecksum::SharedDtor() {
  if (sha1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sha1_;
  }
  if (this != default_instance_) {
  }
}

void ListChecksum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListChecksum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListChecksum_descriptor_;
}

const ListChecksum& ListChecksum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4meta_2eproto();
  return *default_instance_;
}

ListChecksum* ListChecksum::default_instance_ = NULL;

ListChecksum* ListChecksum::New() const {
  return new ListChecksum;
}

void ListChecksum::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    version_ = 0;
    if (has_sha1()) {
      if (sha1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sha1_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListChecksum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.ListChecksum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sha1;
        break;
      }

      // optional bytes sha1 = 4;
      case 4: {
        if (tag == 34) {
         parse_sha1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.ListChecksum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.ListChecksum)
  return false;
#undef DO_
}

void ListChecksum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.ListChecksum)
  // required int32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional bytes sha1 = 4;
  if (has_sha1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.ListChecksum)
}

::google::protobuf::uint8* ListChecksum::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.ListChecksum)
  // required int32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional bytes sha1 = 4;
  if (has_sha1()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.ListChecksum)
  return target;
}

int ListChecksum::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional bytes sha1 = 4;
    if (has_sha1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListChecksum::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListChecksum* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListChecksum*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListChecksum::MergeFrom(const ListChecksum& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_sha1()) {
      set_sha1(from.sha1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListChecksum::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListChecksum::CopyFrom(const ListChecksum& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListChecksum::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ListChecksum::Swap(ListChecksum* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(sha1_, other->sha1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListChecksum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListChecksum_descriptor_;
  metadata.reflection = ListChecksum_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* DownloadFormat_Codec_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DownloadFormat_Codec_descriptor_;
}
bool DownloadFormat_Codec_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DownloadFormat_Codec DownloadFormat::CODEC_UNKNOWN;
const DownloadFormat_Codec DownloadFormat::OGG_VORBIS;
const DownloadFormat_Codec DownloadFormat::FLAC;
const DownloadFormat_Codec DownloadFormat::MPEG_1_LAYER_3;
const DownloadFormat_Codec DownloadFormat::Codec_MIN;
const DownloadFormat_Codec DownloadFormat::Codec_MAX;
const int DownloadFormat::Codec_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DownloadFormat::kCodecFieldNumber;
#endif  // !_MSC_VER

DownloadFormat::DownloadFormat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.DownloadFormat)
}

void DownloadFormat::InitAsDefaultInstance() {
}

DownloadFormat::DownloadFormat(const DownloadFormat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.DownloadFormat)
}

void DownloadFormat::SharedCtor() {
  _cached_size_ = 0;
  codec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DownloadFormat::~DownloadFormat() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.DownloadFormat)
  SharedDtor();
}

void DownloadFormat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DownloadFormat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadFormat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DownloadFormat_descriptor_;
}

const DownloadFormat& DownloadFormat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4meta_2eproto();
  return *default_instance_;
}

DownloadFormat* DownloadFormat::default_instance_ = NULL;

DownloadFormat* DownloadFormat::New() const {
  return new DownloadFormat;
}

void DownloadFormat::Clear() {
  codec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DownloadFormat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.DownloadFormat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .spotify.playlist4.proto.DownloadFormat.Codec codec = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::spotify::playlist4::proto::DownloadFormat_Codec_IsValid(value)) {
            set_codec(static_cast< ::spotify::playlist4::proto::DownloadFormat_Codec >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.DownloadFormat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.DownloadFormat)
  return false;
#undef DO_
}

void DownloadFormat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.DownloadFormat)
  // required .spotify.playlist4.proto.DownloadFormat.Codec codec = 1;
  if (has_codec()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->codec(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.DownloadFormat)
}

::google::protobuf::uint8* DownloadFormat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.DownloadFormat)
  // required .spotify.playlist4.proto.DownloadFormat.Codec codec = 1;
  if (has_codec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->codec(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.DownloadFormat)
  return target;
}

int DownloadFormat::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .spotify.playlist4.proto.DownloadFormat.Codec codec = 1;
    if (has_codec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->codec());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadFormat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DownloadFormat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DownloadFormat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DownloadFormat::MergeFrom(const DownloadFormat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_codec()) {
      set_codec(from.codec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DownloadFormat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFormat::CopyFrom(const DownloadFormat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFormat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DownloadFormat::Swap(DownloadFormat* other) {
  if (other != this) {
    std::swap(codec_, other->codec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DownloadFormat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DownloadFormat_descriptor_;
  metadata.reflection = DownloadFormat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ListAttributes::kNameFieldNumber;
const int ListAttributes::kDescriptionFieldNumber;
const int ListAttributes::kPictureFieldNumber;
const int ListAttributes::kCollaborativeFieldNumber;
const int ListAttributes::kPl3VersionFieldNumber;
const int ListAttributes::kDeletedByOwnerFieldNumber;
const int ListAttributes::kRestrictedCollaborativeFieldNumber;
#endif  // !_MSC_VER

ListAttributes::ListAttributes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.ListAttributes)
}

void ListAttributes::InitAsDefaultInstance() {
}

ListAttributes::ListAttributes(const ListAttributes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.ListAttributes)
}

void ListAttributes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collaborative_ = false;
  pl3_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deleted_by_owner_ = false;
  restricted_collaborative_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListAttributes::~ListAttributes() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.ListAttributes)
  SharedDtor();
}

void ListAttributes::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (picture_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete picture_;
  }
  if (pl3_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pl3_version_;
  }
  if (this != default_instance_) {
  }
}

void ListAttributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAttributes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListAttributes_descriptor_;
}

const ListAttributes& ListAttributes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4meta_2eproto();
  return *default_instance_;
}

ListAttributes* ListAttributes::default_instance_ = NULL;

ListAttributes* ListAttributes::New() const {
  return new ListAttributes;
}

void ListAttributes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ListAttributes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(collaborative_, restricted_collaborative_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        description_->clear();
      }
    }
    if (has_picture()) {
      if (picture_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        picture_->clear();
      }
    }
    if (has_pl3_version()) {
      if (pl3_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pl3_version_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.ListAttributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // optional string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_picture;
        break;
      }

      // optional bytes picture = 3;
      case 3: {
        if (tag == 26) {
         parse_picture:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_picture()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_collaborative;
        break;
      }

      // optional bool collaborative = 4;
      case 4: {
        if (tag == 32) {
         parse_collaborative:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &collaborative_)));
          set_has_collaborative();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pl3_version;
        break;
      }

      // optional string pl3_version = 5;
      case 5: {
        if (tag == 42) {
         parse_pl3_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pl3_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pl3_version().data(), this->pl3_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pl3_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deleted_by_owner;
        break;
      }

      // optional bool deleted_by_owner = 6;
      case 6: {
        if (tag == 48) {
         parse_deleted_by_owner:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_by_owner_)));
          set_has_deleted_by_owner();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_restricted_collaborative;
        break;
      }

      // optional bool restricted_collaborative = 7;
      case 7: {
        if (tag == 56) {
         parse_restricted_collaborative:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &restricted_collaborative_)));
          set_has_restricted_collaborative();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.ListAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.ListAttributes)
  return false;
#undef DO_
}

void ListAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.ListAttributes)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional bytes picture = 3;
  if (has_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->picture(), output);
  }

  // optional bool collaborative = 4;
  if (has_collaborative()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->collaborative(), output);
  }

  // optional string pl3_version = 5;
  if (has_pl3_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pl3_version().data(), this->pl3_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pl3_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pl3_version(), output);
  }

  // optional bool deleted_by_owner = 6;
  if (has_deleted_by_owner()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->deleted_by_owner(), output);
  }

  // optional bool restricted_collaborative = 7;
  if (has_restricted_collaborative()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->restricted_collaborative(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.ListAttributes)
}

::google::protobuf::uint8* ListAttributes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.ListAttributes)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // optional bytes picture = 3;
  if (has_picture()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->picture(), target);
  }

  // optional bool collaborative = 4;
  if (has_collaborative()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->collaborative(), target);
  }

  // optional string pl3_version = 5;
  if (has_pl3_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pl3_version().data(), this->pl3_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pl3_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pl3_version(), target);
  }

  // optional bool deleted_by_owner = 6;
  if (has_deleted_by_owner()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->deleted_by_owner(), target);
  }

  // optional bool restricted_collaborative = 7;
  if (has_restricted_collaborative()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->restricted_collaborative(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.ListAttributes)
  return target;
}

int ListAttributes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string description = 2;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional bytes picture = 3;
    if (has_picture()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->picture());
    }

    // optional bool collaborative = 4;
    if (has_collaborative()) {
      total_size += 1 + 1;
    }

    // optional string pl3_version = 5;
    if (has_pl3_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pl3_version());
    }

    // optional bool deleted_by_owner = 6;
    if (has_deleted_by_owner()) {
      total_size += 1 + 1;
    }

    // optional bool restricted_collaborative = 7;
    if (has_restricted_collaborative()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAttributes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListAttributes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListAttributes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListAttributes::MergeFrom(const ListAttributes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_picture()) {
      set_picture(from.picture());
    }
    if (from.has_collaborative()) {
      set_collaborative(from.collaborative());
    }
    if (from.has_pl3_version()) {
      set_pl3_version(from.pl3_version());
    }
    if (from.has_deleted_by_owner()) {
      set_deleted_by_owner(from.deleted_by_owner());
    }
    if (from.has_restricted_collaborative()) {
      set_restricted_collaborative(from.restricted_collaborative());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListAttributes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAttributes::CopyFrom(const ListAttributes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAttributes::IsInitialized() const {

  return true;
}

void ListAttributes::Swap(ListAttributes* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(description_, other->description_);
    std::swap(picture_, other->picture_);
    std::swap(collaborative_, other->collaborative_);
    std::swap(pl3_version_, other->pl3_version_);
    std::swap(deleted_by_owner_, other->deleted_by_owner_);
    std::swap(restricted_collaborative_, other->restricted_collaborative_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListAttributes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListAttributes_descriptor_;
  metadata.reflection = ListAttributes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemAttributes::kAddedByFieldNumber;
const int ItemAttributes::kMessageFieldNumber;
const int ItemAttributes::kSeenFieldNumber;
const int ItemAttributes::kDownloadFormatFieldNumber;
const int ItemAttributes::kSevendigitalIdFieldNumber;
#endif  // !_MSC_VER

ItemAttributes::ItemAttributes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.ItemAttributes)
}

void ItemAttributes::InitAsDefaultInstance() {
  download_format_ = const_cast< ::spotify::playlist4::proto::DownloadFormat*>(&::spotify::playlist4::proto::DownloadFormat::default_instance());
}

ItemAttributes::ItemAttributes(const ItemAttributes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.ItemAttributes)
}

void ItemAttributes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  added_by_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seen_ = false;
  download_format_ = NULL;
  sevendigital_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemAttributes::~ItemAttributes() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.ItemAttributes)
  SharedDtor();
}

void ItemAttributes::SharedDtor() {
  if (added_by_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete added_by_;
  }
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (sevendigital_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sevendigital_id_;
  }
  if (this != default_instance_) {
    delete download_format_;
  }
}

void ItemAttributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemAttributes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemAttributes_descriptor_;
}

const ItemAttributes& ItemAttributes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4meta_2eproto();
  return *default_instance_;
}

ItemAttributes* ItemAttributes::default_instance_ = NULL;

ItemAttributes* ItemAttributes::New() const {
  return new ItemAttributes;
}

void ItemAttributes::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_added_by()) {
      if (added_by_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        added_by_->clear();
      }
    }
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        message_->clear();
      }
    }
    seen_ = false;
    if (has_download_format()) {
      if (download_format_ != NULL) download_format_->::spotify::playlist4::proto::DownloadFormat::Clear();
    }
    if (has_sevendigital_id()) {
      if (sevendigital_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sevendigital_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.ItemAttributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string added_by = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_added_by()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->added_by().data(), this->added_by().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "added_by");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_seen;
        break;
      }

      // optional bool seen = 4;
      case 4: {
        if (tag == 32) {
         parse_seen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seen_)));
          set_has_seen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_download_format;
        break;
      }

      // optional .spotify.playlist4.proto.DownloadFormat download_format = 6;
      case 6: {
        if (tag == 50) {
         parse_download_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_download_format()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sevendigital_id;
        break;
      }

      // optional string sevendigital_id = 7;
      case 7: {
        if (tag == 58) {
         parse_sevendigital_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sevendigital_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sevendigital_id().data(), this->sevendigital_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sevendigital_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.ItemAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.ItemAttributes)
  return false;
#undef DO_
}

void ItemAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.ItemAttributes)
  // optional string added_by = 1;
  if (has_added_by()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->added_by().data(), this->added_by().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "added_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->added_by(), output);
  }

  // optional string message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional bool seen = 4;
  if (has_seen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->seen(), output);
  }

  // optional .spotify.playlist4.proto.DownloadFormat download_format = 6;
  if (has_download_format()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->download_format(), output);
  }

  // optional string sevendigital_id = 7;
  if (has_sevendigital_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sevendigital_id().data(), this->sevendigital_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sevendigital_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sevendigital_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.ItemAttributes)
}

::google::protobuf::uint8* ItemAttributes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.ItemAttributes)
  // optional string added_by = 1;
  if (has_added_by()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->added_by().data(), this->added_by().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "added_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->added_by(), target);
  }

  // optional string message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional bool seen = 4;
  if (has_seen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->seen(), target);
  }

  // optional .spotify.playlist4.proto.DownloadFormat download_format = 6;
  if (has_download_format()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->download_format(), target);
  }

  // optional string sevendigital_id = 7;
  if (has_sevendigital_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sevendigital_id().data(), this->sevendigital_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sevendigital_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sevendigital_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.ItemAttributes)
  return target;
}

int ItemAttributes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string added_by = 1;
    if (has_added_by()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->added_by());
    }

    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional bool seen = 4;
    if (has_seen()) {
      total_size += 1 + 1;
    }

    // optional .spotify.playlist4.proto.DownloadFormat download_format = 6;
    if (has_download_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->download_format());
    }

    // optional string sevendigital_id = 7;
    if (has_sevendigital_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sevendigital_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemAttributes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemAttributes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemAttributes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemAttributes::MergeFrom(const ItemAttributes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_added_by()) {
      set_added_by(from.added_by());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_seen()) {
      set_seen(from.seen());
    }
    if (from.has_download_format()) {
      mutable_download_format()->::spotify::playlist4::proto::DownloadFormat::MergeFrom(from.download_format());
    }
    if (from.has_sevendigital_id()) {
      set_sevendigital_id(from.sevendigital_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemAttributes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemAttributes::CopyFrom(const ItemAttributes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemAttributes::IsInitialized() const {

  if (has_download_format()) {
    if (!this->download_format().IsInitialized()) return false;
  }
  return true;
}

void ItemAttributes::Swap(ItemAttributes* other) {
  if (other != this) {
    std::swap(added_by_, other->added_by_);
    std::swap(message_, other->message_);
    std::swap(seen_, other->seen_);
    std::swap(download_format_, other->download_format_);
    std::swap(sevendigital_id_, other->sevendigital_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemAttributes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemAttributes_descriptor_;
  metadata.reflection = ItemAttributes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StringAttribute::kKeyFieldNumber;
const int StringAttribute::kValueFieldNumber;
#endif  // !_MSC_VER

StringAttribute::StringAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.StringAttribute)
}

void StringAttribute::InitAsDefaultInstance() {
}

StringAttribute::StringAttribute(const StringAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.StringAttribute)
}

void StringAttribute::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringAttribute::~StringAttribute() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.StringAttribute)
  SharedDtor();
}

void StringAttribute::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void StringAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringAttribute_descriptor_;
}

const StringAttribute& StringAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4meta_2eproto();
  return *default_instance_;
}

StringAttribute* StringAttribute::default_instance_ = NULL;

StringAttribute* StringAttribute::New() const {
  return new StringAttribute;
}

void StringAttribute::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StringAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.StringAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.StringAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.StringAttribute)
  return false;
#undef DO_
}

void StringAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.StringAttribute)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.StringAttribute)
}

::google::protobuf::uint8* StringAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.StringAttribute)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.StringAttribute)
  return target;
}

int StringAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StringAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StringAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StringAttribute::MergeFrom(const StringAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StringAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringAttribute::CopyFrom(const StringAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void StringAttribute::Swap(StringAttribute* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StringAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringAttribute_descriptor_;
  metadata.reflection = StringAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StringAttributes::kAttributeFieldNumber;
#endif  // !_MSC_VER

StringAttributes::StringAttributes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spotify.playlist4.proto.StringAttributes)
}

void StringAttributes::InitAsDefaultInstance() {
}

StringAttributes::StringAttributes(const StringAttributes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spotify.playlist4.proto.StringAttributes)
}

void StringAttributes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringAttributes::~StringAttributes() {
  // @@protoc_insertion_point(destructor:spotify.playlist4.proto.StringAttributes)
  SharedDtor();
}

void StringAttributes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StringAttributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringAttributes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringAttributes_descriptor_;
}

const StringAttributes& StringAttributes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_playlist4meta_2eproto();
  return *default_instance_;
}

StringAttributes* StringAttributes::default_instance_ = NULL;

StringAttributes* StringAttributes::New() const {
  return new StringAttributes;
}

void StringAttributes::Clear() {
  attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StringAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spotify.playlist4.proto.StringAttributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .spotify.playlist4.proto.StringAttribute attribute = 1;
      case 1: {
        if (tag == 10) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_attribute;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spotify.playlist4.proto.StringAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spotify.playlist4.proto.StringAttributes)
  return false;
#undef DO_
}

void StringAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spotify.playlist4.proto.StringAttributes)
  // repeated .spotify.playlist4.proto.StringAttribute attribute = 1;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spotify.playlist4.proto.StringAttributes)
}

::google::protobuf::uint8* StringAttributes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spotify.playlist4.proto.StringAttributes)
  // repeated .spotify.playlist4.proto.StringAttribute attribute = 1;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spotify.playlist4.proto.StringAttributes)
  return target;
}

int StringAttributes::ByteSize() const {
  int total_size = 0;

  // repeated .spotify.playlist4.proto.StringAttribute attribute = 1;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringAttributes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StringAttributes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StringAttributes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StringAttributes::MergeFrom(const StringAttributes& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_.MergeFrom(from.attribute_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StringAttributes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringAttributes::CopyFrom(const StringAttributes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringAttributes::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->attribute())) return false;
  return true;
}

void StringAttributes::Swap(StringAttributes* other) {
  if (other != this) {
    attribute_.Swap(&other->attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StringAttributes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringAttributes_descriptor_;
  metadata.reflection = StringAttributes_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace playlist4
}  // namespace spotify

// @@protoc_insertion_point(global_scope)
